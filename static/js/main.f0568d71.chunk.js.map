{"version":3,"sources":["constants/constant.js","reducers/combinedReducer.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","reducers/configReducer.js","localStorage.js","store.js","components/Footer.js","actions/userActions.js","customHooks/useBreakpoint.js","components/Header.js","actions/productActions.js","components/Ratings.js","components/ImgSlider.js","components/Product.js","components/Loader.js","components/Message.js","screens/HomeScreens.js","actions/cartActions.js","screens/ProductScreen.js","screens/CartScreen.js","screens/LoginScreen.js","components/FormContainer.js","screens/RegisterScreen.js","screens/ProfileScreen.js","components/CheckoutSteps.js","actions/orderActions.js","screens/PlaceOrdersScreen.js","screens/OrdersScreen.js","actions/configActions.js","screens/MyOrdersScreen.js","screens/ShippingScreen.js","screens/PaymentMethodScreen.js","screens/AdminUserListScreen.js","screens/AdminUserEditScreen.js","screens/AdminProductListScreen.js","screens/AdminOrderListScreen.js","screens/AdminProductEditScreen.js","screens/AdminAddNewProductScreen.js","App.js","reportWebVitals.js","i18n/config.js","index.js"],"names":["constants","PRODUCT_NEW_ADD_REQUEST","PRODUCT_NEW_ADD_SUCCESS","PRODUCT_NEW_ADD_FAILED","PRODUCT_NEW_ADD_RESET","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILED","PRODUCT_EDIT_REQUEST","PRODUCT_EDIT_SUCCESS","PRODUCT_EDIT_FAIL","PRODUCT_EDIT_RESET","SINGLE_PRODUCT_REQUEST","SINGLE_PRODUCT_SUCCESS","SINGLE_PRODUCT_FAILED","SINGLE_PRODUCT_RESET","DELETE_SINGLE_PRODUCT_REQUEST","DELETE_SINGLE_PRODUCT_SUCCESS","DELETE_SINGLE_PRODUCT_FAILED","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_ITEMS_RESET","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILED","USER_REGISTER_RESET","REMOVE_USER_REGISTER_ERRORS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","USER_LOGIN_RESET","USER_LOGOUT","USER_AS_GUEST_REQUEST","USER_AS_GUEST_SUCCESS","USER_AS_GUEST_FAILED","USER_AS_GUEST_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILED","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILED","USER_DELETE_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAILED","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","CART_SAVE_USER_SHIPPING_ADDRESS","CART_SAVE_USER_PAYMENT_METHOD","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_CANCEL_REQUEST","ORDER_CANCEL_SUCCESS","ORDER_CANCEL_FAIL","ORDER_CANCEL_RESET","ORDER_DETAILS_BY_ID_REQUEST","ORDER_DETAILS_BY_ID_SUCCESS","ORDER_DETAILS_BY_ID_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","MY_ORDERS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_PAY_ADMIN_REQUEST","ORDER_PAY_ADMIN_SUCCESS","ORDER_PAY_ADMIN_FAIL","ORDER_PAY_ADMIN_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ORDER_NOT_DELIVER_REQUEST","ORDER_NOT_DELIVER_SUCCESS","ORDER_NOT_DELIVER_FAIL","ORDER_NOT_DELIVER_RESET","PAYPAL_CLIENT_ID_REQUEST","PAYPAL_CLIENT_ID_SUCCESS","PAYPAL_CLIENT_ID_FAIL","USER_EDIT_REQUEST","USER_EDIT_SUCCESS","USER_EDIT_FAIL","USER_EDIT_RESET","combinedReducer","combineReducers","products","state","action","type","loading","payload","error","product","productDelete","success","deletedProduct","DELETE_SINGLE_PRODUCT_RESET","productEdit","productNewAdd","productAdded","cart","cartItems","shippingAddress","paymentMethod","item","existingItem","find","cartItem","_id","map","filter","id","localStorage","removeItem","userLogin","userInfo","userAsGuest","guestInfo","userRegister","userDelete","deletedUser","userDetails","user","userProfileUpdate","users","USER_PROFILE_UPDATE_RESET","userList","userEdit","orderCreate","order","orderCancel","cancelledOrder","removedOrder","orderDetailsById","orderItems","myOrders","myOrder","orders","orderPay","orderPayAdmin","orderDeliver","orderNotDeliver","paypalClientId","localStorageData","cartItemsFromLocalStorage","getItem","JSON","parse","userInfoFromLocalStorage","userAsGuestInfoFromLocalStorage","shippingAddressFromLocalStorage","setLocal","name","value","setItem","stringify","initialState","middleware","thunk","store","createStore","applyMiddleware","Footer","Container","Row","Col","className","userLogout","dispatch","a","getUserDetails","getState","config","headers","Authorization","token","axios","get","data","message","response","getUserList","getDeviceConfig","width","useBreakpoint","useState","window","innerWidth","brkPnt","setBrkPnt","setWidth","useEffect","calcInnerWidth","throttle","addEventListener","removeEventListener","Header","history","t","useTranslation","i18n","lang","setLang","changeLanguage","e","target","useDispatch","useSelector","isLoggedIn","Navbar","bg","fixed","variant","expand","collapseOnSelect","to","Brand","isAdmin","NavDropdown","title","Item","Divider","Toggle","aria-controls","Collapse","Nav","onClick","Link","Button","size","length","ButtonGroup","style","height","getProducts","getSingleProduct","Ratings","rating","numReviews","color","num","defaultProp","ImgSlider","productId","images","Carousel","interval","cursor","controls","image","i","src","path","alt","objectFit","Product","amount","useHistory","Card","Body","push","Title","as","Badge","pill","Text","price","Intl","NumberFormat","currency","format","Loader","position","top","left","display","justifyContent","alignItems","backgroundColor","zIndex","Spinner","animation","margin","Message","children","Alert","defaultProps","HomeScreen","cats","setCats","selectedCat","setSelectedCat","selectedProducts","setSelectedProducts","category","arr","forEach","cat","language","messageText","xs","md","lg","vertical","addProductToCart","qty","countInStock","removeProductFromCart","savePaymentMethod","ProductScreen","match","setQty","initial","params","isInCart","setIsInCart","console","log","ListGroup","description","Form","Control","onChange","Array","keys","disabled","CartScreen","location","search","Number","split","removeFromCartHandler","borderTopWidth","Image","fluid","rounded","reduce","acc","toFixed","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","loginData","preventDefault","post","Group","controlId","Label","placeholder","FormContainer","minHeight","xl","RegisterScreen","setName","confirmPassword","setConfirmPassword","isPasswordOK","setIsPasswordOK","isPasswordEmpty","setIsPasswordEmpty","setMessage","registerData","isEmpty","trim","checkPassword","ProfileScreen","put","USER_PROFILE_UPDATE_FAIL","updateUserProfile","CheckoutSteps","step1","step2","step3","createOrder","visitor","orderData","cancelOrder","delete","getMyOrders","getOrders","ORDER_LIST_FAILED","PlaceOrdersScreen","guest","addDecimals","Math","round","itemsPrice","curr","shippingPrice","taxPrice","totalPrice","street","number","zipcode","city","country","index","OrdersScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","errorPay","loadingPayAdmin","successPayAdmin","errorPayAdmin","loadingDeliver","successDeliver","errorDeliver","loadingNotDeliver","successNotDeliver","errorNotDeliver","successCancel","errorCancel","removeScript","script","document","getElementById","remove","orderDetails","addPayPalScript","clientId","createElement","async","onload","body","appendChild","isPaid","paypal","str","successAdminPaymentHandler","paymentByAdmin","status","update_time","Date","now","email_address","payData","payOrderAdmin","successDeliverHandler","isDelivered","deliverNotOrder","deliverOrder","showDate","toLocaleDateString","dateStyle","Trans","i18nKey","paidAt","toLocaleTimeString","timeStyle","href","deliveredAt","onSuccess","paymentResult","payOrder","shippingPreference","catchError","MyOrdersScreen","loadingCancel","Table","striped","bordered","responsive","hover","verticalAlign","textTransform","createdAt","whiteSpace","ShippingScreen","setStreet","setNumber","setZipcode","setCity","setCountry","guestData","shippingData","sm","required","PaymentMethodScreen","setPaymentMethod","Check","label","checked","AdminUserListScreen","showSuccess","setShowSuccess","loadingDeleted","errorDeleted","errorEdit","show","setShow","userForDelete","setUserForDelete","handleConfirm","confirm","deleteHandlerShow","data-toggle","Modal","onHide","AdminUserEditScreen","setIsAdmin","editUser","AdminProductListScreen","productForDelete","setProductForDelete","brand","AdminOrderListScreen","step0","setStep0","total0","setTotal0","numArr0","setNumArr0","index0","setIndex0","setStep1","total1","setTotal1","numArr1","setNumArr1","index1","setIndex1","selected","setSelected","orderForDelete","setOrderForDelete","deletedOrder","userOrders","builtPaginatorNumArr","visitorOrders","step","deleteSingleOrder","selectedTabHandler","tab","Accordion","defaultActiveKey","eventKey","Pagination","First","Prev","active","Next","parseInt","Last","DropdownButton","Dropdown","OverlayTrigger","trigger","placement","overlay","Popover","Content","AdminProductEditScreen","setDescription","setBrand","setCategory","setPrice","setCountInStock","setImage","imgError","setImgError","isUploading","setIsUploading","fileRef","useRef","successEdit","loadingEdit","uploadFileHandler","key","files","file","test","formData","FormData","append","img","originalname","removeImgHandler","splice","editSingleProduct","rows","InputGroup","min","File","ref","custom","multiple","AdminAddNewProductScreen","setLanguage","on","current","validated","setValidated","productAddedSuccess","setProductAddedSuccess","loadingProduct","errorProduct","errorAdded","noValidate","form","currentTarget","checkValidity","addNewProduct","stopPropagation","Feedback","undefined","App","paddingTop","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","initReactI18next","init","fallbackLng","lng","resources","de","translations","require","en","ns","defaultNS","interpolation","escapeValue","languages","ReactDOM","render"],"mappings":"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","file":"static/js/main.f0568d71.chunk.js","sourcesContent":["export const constants = {\r\n    // Products action types\r\n    PRODUCT_NEW_ADD_REQUEST: 'PRODUCT_NEW_ADD_REQUEST',\r\n    PRODUCT_NEW_ADD_SUCCESS: 'PRODUCT_NEW_ADD_SUCCESS',\r\n    PRODUCT_NEW_ADD_FAILED: 'PRODUCT_NEW_ADD_FAILED',\r\n    PRODUCT_NEW_ADD_RESET: 'PRODUCT_NEW_ADD_RESET',\r\n\r\n    // Products action types\r\n    PRODUCT_LIST_REQUEST: 'PRODUCT_LIST_REQUEST',\r\n    PRODUCT_LIST_SUCCESS: 'PRODUCT_LIST_SUCCESS',\r\n    PRODUCT_LIST_FAILED: 'PRODUCT_LIST_FAILED',\r\n\r\n    /* EDIT PRODUCT */\r\n    PRODUCT_EDIT_REQUEST: 'USER_EDIT_REQUEST',\r\n    PRODUCT_EDIT_SUCCESS: 'USER_EDIT_SUCCESS',\r\n    PRODUCT_EDIT_FAIL: 'USER_EDIT_FAIL',\r\n    PRODUCT_EDIT_RESET: 'USER_EDIT_RESET',\r\n\r\n    // Product Detail action types\r\n    SINGLE_PRODUCT_REQUEST: 'SINGLE_PRODUCT_REQUEST',\r\n    SINGLE_PRODUCT_SUCCESS: 'SINGLE_PRODUCT_SUCCESS',\r\n    SINGLE_PRODUCT_FAILED: 'SINGLE_PRODUCT_FAILED',\r\n    SINGLE_PRODUCT_RESET: 'SINGLE_PRODUCT_RESET',\r\n\r\n    // Delete a single Product action types\r\n    DELETE_SINGLE_PRODUCT_REQUEST: 'DELETE_SINGLE_PRODUCT_REQUEST',\r\n    DELETE_SINGLE_PRODUCT_SUCCESS: 'DELETE_SINGLE_PRODUCT_SUCCESS',\r\n    DELETE_SINGLE_PRODUCT_FAILED: 'DELETE_SINGLE_PRODUCT_FAILED',\r\n\r\n    // Cart action types\r\n    CART_ADD_ITEM: 'CART_ADD_ITEM',\r\n    CART_REMOVE_ITEM: 'CART_REMOVE_ITEM',\r\n    CART_ITEMS_RESET: 'CART_ITEMS_RESET',\r\n\r\n    /* REGISTER */\r\n    USER_REGISTER_REQUEST: 'USER_REGISTER_REQUEST',\r\n    USER_REGISTER_SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    USER_REGISTER_FAILED: 'USER_REGISTER_FAILED',\r\n    USER_REGISTER_RESET: 'USER_REGISTER_RESET',\r\n    REMOVE_USER_REGISTER_ERRORS: 'REMOVE_USER_REGISTER_ERRORS',\r\n\r\n    /* LOGIN */\r\n    USER_LOGIN_REQUEST: 'USER_LOGIN_REQUEST ',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAILED: 'USER_LOGIN_FAILED',\r\n    USER_LOGIN_RESET: 'USER_LOGIN_RESET',\r\n    USER_LOGOUT: 'USER_LOGOUT',\r\n\r\n    /* AS GUEST */\r\n    USER_AS_GUEST_REQUEST: 'USER_AS_GUEST_REQUEST ',\r\n    USER_AS_GUEST_SUCCESS: 'USER_AS_GUEST_SUCCESS',\r\n    USER_AS_GUEST_FAILED: 'USER_AS_GUEST_FAILED',\r\n    USER_AS_GUEST_RESET: 'USER_AS_GUEST_RESET',\r\n\r\n    /* USER LIST */\r\n    USER_LIST_REQUEST: 'USER_LIST_REQUEST ',\r\n    USER_LIST_SUCCESS: 'USER_LIST_SUCCESS',\r\n    USER_LIST_FAILED: 'USER_LIST_FAILED',\r\n    USER_LIST_RESET: 'USER_LIST_RESET',\r\n\r\n    /* USER DELETE */\r\n    USER_DELETE_REQUEST: 'USER_DELETE_REQUEST ',\r\n    USER_DELETE_SUCCESS: 'USER_DELETE_SUCCESS',\r\n    USER_DELETE_FAILED: 'USER_DELETE_FAILED',\r\n    USER_DELETE_RESET: 'USER_DELETE_RESET',\r\n\r\n    /* PROFLE UPDATE */\r\n    USER_PROFILE_UPDATE_REQUEST: 'USER_PROFILE_UPDATE_REQUEST',\r\n    USER_PROFILE_UPDATE_SUCCESS: 'USER_PROFILE_UPDATE_SUCCESS',\r\n    USER_PROFILE_UPDATE_FAILED: 'USER_PROFILE_UPDATE_FAILED',\r\n\r\n    /* GET USER DETAILS */\r\n    USER_DETAILS_REQUEST: 'USER_DETAILS_REQUEST',\r\n    USER_DETAILS_SUCCESS: 'USER_DETAILS_SUCCESS',\r\n    USER_DETAILS_FAIL: 'USER_DETAILS_FAIL',\r\n    USER_DETAILS_RESET: 'USER_DETAILS_RESET',\r\n\r\n    /** SAVE USER SHIPPPING ADDRESS */\r\n    CART_SAVE_USER_SHIPPING_ADDRESS: 'CART_SAVE_USER_SHIPPING_ADDRESS',\r\n\r\n    /** SAVE USER PAYMENT METHOD */\r\n    CART_SAVE_USER_PAYMENT_METHOD: 'CART_SAVE_USER_PAYMENT_METHOD',\r\n\r\n    /** SAVE ORDER */\r\n    ORDER_CREATE_REQUEST: 'ORDER_CREATE_REQUEST',\r\n    ORDER_CREATE_SUCCESS: 'ORDER_CREATE_SUCCESS',\r\n    ORDER_CREATE_FAIL: 'ORDER_CREATE_FAIL',\r\n    ORDER_CREATE_RESET: 'ORDER_CREATE_RESET',\r\n\r\n    /** GET ORDER LIST */\r\n    ORDER_LIST_REQUEST: 'ORDER_LIST_REQUEST',\r\n    ORDER_LIST_SUCCESS: 'ORDER_LIST_SUCCESS',\r\n    ORDER_LIST_FAIL: 'ORDER_LIST_FAIL',\r\n    ORDER_LIST_RESET: 'ORDER_LIST_RESET',\r\n\r\n    /** SAVE ORDER */\r\n    ORDER_CANCEL_REQUEST: 'ORDER_CANCEL_REQUEST',\r\n    ORDER_CANCEL_SUCCESS: 'ORDER_CANCEL_SUCCESS',\r\n    ORDER_CANCEL_FAIL: 'ORDER_CANCEL_FAIL',\r\n    ORDER_CANCEL_RESET: 'ORDER_CANCEL_RESET',\r\n\r\n    /** GET ORDER DETAILS BY ID */\r\n    ORDER_DETAILS_BY_ID_REQUEST: 'ORDER_DETAILS_BY_ID_REQUEST',\r\n    ORDER_DETAILS_BY_ID_SUCCESS: 'ORDER_DETAILS_BY_ID_SUCCESS',\r\n    ORDER_DETAILS_BY_ID_FAIL: 'ORDER_DETAILS_BY_ID_FAIL',\r\n\r\n    /** GET USER'S ORDERs */\r\n    MY_ORDERS_REQUEST: 'MY_ORDERS_REQUEST',\r\n    MY_ORDERS_SUCCESS: 'MY_ORDERS_SUCCESS',\r\n    MY_ORDERS_FAIL: 'MY_ORDERS_FAIL',\r\n    MY_ORDERS_RESET: 'MY_ORDERS_RESET',\r\n\r\n    /** PAY ORDER */\r\n    ORDER_PAY_REQUEST: 'ORDER_PAY_REQUEST',\r\n    ORDER_PAY_SUCCESS: 'ORDER_PAY_SUCCESS',\r\n    ORDER_PAY_FAIL: 'ORDER_PAY_FAIL',\r\n    ORDER_PAY_RESET: 'ORDER_PAY_RESET',\r\n\r\n    /** ADMIN PAY ORDER */\r\n    ORDER_PAY_ADMIN_REQUEST: 'ORDER_PAY_ADMIN_REQUEST',\r\n    ORDER_PAY_ADMIN_SUCCESS: 'ORDER_PAY_ADMIN_SUCCESS',\r\n    ORDER_PAY_ADMIN_FAIL: 'ORDER_PAY_ADMIN_FAIL',\r\n    ORDER_PAY_ADMIN_RESET: 'ORDER_PAY_ADMIN_RESET',\r\n\r\n    /** DELIVER ORDER */\r\n    ORDER_DELIVER_REQUEST: 'ORDER_DELIVER_REQUEST',\r\n    ORDER_DELIVER_SUCCESS: 'ORDER_DELIVER_SUCCESS',\r\n    ORDER_DELIVER_FAIL: 'ORDER_DELIVER_FAIL',\r\n    ORDER_DELIVER_RESET: 'ORDER_DELIVER_RESET',\r\n\r\n    /** NOT DELIVER ORDER */\r\n    ORDER_NOT_DELIVER_REQUEST: 'ORDER_NOT_DELIVER_REQUEST',\r\n    ORDER_NOT_DELIVER_SUCCESS: 'ORDER_NOT_DELIVER_SUCCESS',\r\n    ORDER_NOT_DELIVER_FAIL: 'ORDER_NOT_DELIVER_FAIL',\r\n    ORDER_NOT_DELIVER_RESET: 'ORDER_NOT_DELIVER_RESET',\r\n\r\n    /** get paypal-client-id */\r\n    PAYPAL_CLIENT_ID_REQUEST: 'PAYPAL_CLIENT_ID_REQUEST',\r\n    PAYPAL_CLIENT_ID_SUCCESS: 'PAYPAL_CLIENT_ID_SUCCESS',\r\n    PAYPAL_CLIENT_ID_FAIL: 'PAYPAL_CLIENT_ID_FAIL',\r\n\r\n    /* EDIT USER */\r\n    USER_EDIT_REQUEST: 'USER_EDIT_REQUEST',\r\n    USER_EDIT_SUCCESS: 'USER_EDIT_SUCCESS',\r\n    USER_EDIT_FAIL: 'USER_EDIT_FAIL',\r\n    USER_EDIT_RESET: 'USER_EDIT_RESET',\r\n}","import {\r\n    combineReducers\r\n} from 'redux';\r\n\r\nimport {\r\n    productsReducer,\r\n    productReducer,\r\n    productDeleteReducer,\r\n    productEditReducer,\r\n    productNewAddReducer\r\n} from './productReducer.js';\r\n\r\nimport {\r\n    cartReducer\r\n} from './cartReducer.js';\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userAsGuestReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userProfileUpdateReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userEditReducer\r\n} from './userReducer.js';\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderCancelReducer,\r\n    orderDetailsByIdReducer,\r\n    orderPayReducer,\r\n    orderPayAdminReducer,\r\n    orderDeliverReducer,\r\n    orderNotDeliverReducer,\r\n    myOrdersReducer,\r\n    ordersReducer\r\n} from './orderReducer.js'\r\n\r\nimport {\r\n    paypalClientIdReducer\r\n} from './configReducer.js'\r\n\r\nexport const combinedReducer = combineReducers({\r\n    products: productsReducer,\r\n    product: productReducer,\r\n    productDelete: productDeleteReducer,\r\n    productEdit: productEditReducer,\r\n    productNewAdd: productNewAddReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userAsGuest: userAsGuestReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDelete: userDeleteReducer,\r\n    userDetails: userDetailsReducer,\r\n    userProfileUpdate: userProfileUpdateReducer,\r\n    userList: userListReducer,\r\n    userEdit: userEditReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderCancel: orderCancelReducer,\r\n    orderDetailsById: orderDetailsByIdReducer,\r\n    myOrders: myOrdersReducer,\r\n    orders: ordersReducer,\r\n    orderPay: orderPayReducer,\r\n    orderPayAdmin: orderPayAdminReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderNotDeliver: orderNotDeliverReducer,\r\n\r\n    paypalClientId: paypalClientIdReducer\r\n});","import { constants } from '../constants/constant.js';\r\n\r\nexport const productsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case constants.PRODUCT_LIST_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.PRODUCT_LIST_SUCCESS:\r\n            return { ...state, loading: false, products: action.payload }\r\n        case constants.PRODUCT_LIST_FAILED:\r\n            return { ...state, loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.SINGLE_PRODUCT_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.SINGLE_PRODUCT_SUCCESS:\r\n            return { ...state, loading: false, product: action.payload }\r\n        case constants.SINGLE_PRODUCT_FAILED:\r\n            return { ...state, loading: false, error: action.payload }\r\n        case constants.SINGLE_PRODUCT_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productNewAddReducer = (state = { productAdded: null }, action) => {\r\n    switch (action.type) {\r\n        case constants.PRODUCT_NEW_ADD_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.PRODUCT_NEW_ADD_SUCCESS:\r\n            return { ...state, loading: false, productAdded: action.payload }\r\n        case constants.PRODUCT_NEW_ADD_FAILED:\r\n            return { ...state, loading: false, error: action.payload }\r\n        case constants.PRODUCT_NEW_ADD_RESET:\r\n            return { productAdded: null }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productEditReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.PRODUCT_EDIT_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.PRODUCT_EDIT_SUCCESS:\r\n            return { ...state, loading: false, success: true }\r\n        case constants.PRODUCT_EDIT_FAIL:\r\n            return { ...state, loading: false, error: action.payload }\r\n        case constants.PRODUCT_EDIT_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.DELETE_SINGLE_PRODUCT_REQUEST:\r\n            return { ...state }\r\n        case constants.DELETE_SINGLE_PRODUCT_SUCCESS:\r\n            return { success: true, deletedProduct: action.payload }\r\n        case constants.DELETE_SINGLE_PRODUCT_FAILED:\r\n            return { error: action.payload }\r\n        case constants.DELETE_SINGLE_PRODUCT_RESET:\r\n            return { deletedProduct: null }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/* For Basic Version State */\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case constants.PRODUCT_LIST_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.PRODUCT_LIST_SUCCESS:\r\n            return { ...state, loading: false, products: action.payload }\r\n        case constants.PRODUCT_LIST_FAILED:\r\n            return { ...state, loading: false, error: action.payload }\r\n\r\n        case constants.SINGLE_PRODUCT_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.SINGLE_PRODUCT_SUCCESS:\r\n            return { ...state, loading: false, product: action.payload }\r\n        case constants.SINGLE_PRODUCT_FAILED:\r\n            return { ...state, loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { constants } from '../constants/constant.js';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {}, paymentMethod: {} }, action) => {\r\n    switch (action.type) {\r\n        case constants.CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existingItem = state.cartItems.find(cartItem => cartItem._id === item._id);\r\n\r\n            if (existingItem) {\r\n                return { ...state, cartItems: state.cartItems.map(cartItem => cartItem._id === existingItem._id ? item : cartItem) }\r\n            } else {\r\n                return { ...state, cartItems: [...state.cartItems, item] }\r\n            }\r\n\r\n        case constants.CART_REMOVE_ITEM:\r\n            return { ...state, cartItems: [...state.cartItems.filter(cartItem => cartItem._id !== action.payload.id)] }\r\n\r\n        case constants.CART_ITEMS_RESET:\r\n            localStorage.removeItem('cartItems');\r\n            return { ...state, cartItems: [] }\r\n\r\n        case constants.CART_SAVE_USER_SHIPPING_ADDRESS:\r\n            return { ...state, shippingAddress: { ...action.payload } }\r\n\r\n        case constants.CART_SAVE_USER_PAYMENT_METHOD:\r\n            return { ...state, paymentMethod: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { constants } from '../constants/constant.js';\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_REGISTER_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.USER_REGISTER_SUCCESS:\r\n            return { ...state, loading: false, userInfo: action.payload }\r\n        case constants.USER_REGISTER_FAILED:\r\n            return { ...state, loading: false, error: action.payload }\r\n        case constants.REMOVE_USER_REGISTER_ERRORS:\r\n            return { ...state, error: null }\r\n        case constants.USER_REGISTER_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case constants.USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case constants.USER_LOGIN_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case constants.USER_LOGIN_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userAsGuestReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_AS_GUEST_REQUEST:\r\n            return { loading: true }\r\n        case constants.USER_AS_GUEST_SUCCESS:\r\n            return { loading: false, guestInfo: action.payload }\r\n        case constants.USER_AS_GUEST_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case constants.USER_AS_GUEST_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userProfileUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_PROFILE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case constants.USER_PROFILE_UPDATE_SUCCESS:\r\n            return { success: true, loading: false, users: action.payload }\r\n        case constants.USER_PROFILE_UPDATE_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case constants.USER_PROFILE_UPDATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case constants.USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case constants.USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case constants.USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case constants.USER_LIST_FAILED:\r\n            return { loading: false, error: action.payload }\r\n        case constants.USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_DELETE_REQUEST:\r\n            return { ...state }\r\n        case constants.USER_DELETE_SUCCESS:\r\n            return { success: true, deletedUser: action.payload }\r\n        case constants.USER_DELETE_FAILED:\r\n            return { error: action.payload }\r\n        case constants.USER_DELETE_RESET:\r\n            return { deletedUser: null }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userEditReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.USER_EDIT_REQUEST:\r\n            return { ...state }\r\n        case constants.USER_EDIT_SUCCESS:\r\n            return { success: true }\r\n        case constants.USER_EDIT_FAIL:\r\n            return { error: action.payload }\r\n        case constants.USER_EDIT_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import { constants } from '../constants/constant.js';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case constants.ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case constants.ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case constants.ORDER_CREATE_RESET:\r\n            return {\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderCancelReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_CANCEL_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case constants.ORDER_CANCEL_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                cancelledOrder: action?.payload?.removedOrder\r\n            }\r\n        case constants.ORDER_CANCEL_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case constants.ORDER_CANCEL_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsByIdReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_DETAILS_BY_ID_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case constants.ORDER_DETAILS_BY_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case constants.ORDER_DETAILS_BY_ID_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const myOrdersReducer = (state = { myOrders: [] }, action) => {\r\n    switch (action.type) {\r\n        case constants.MY_ORDERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case constants.MY_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                myOrders: action.payload\r\n            }\r\n        case constants.MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case constants.MY_ORDERS_RESET:\r\n            return {\r\n                myOrder: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = { loading: false, success: false }, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_PAY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case constants.ORDER_PAY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case constants.ORDER_PAY_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case constants.ORDER_PAY_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayAdminReducer = (state = { loading: false, success: false }, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_PAY_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case constants.ORDER_PAY_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case constants.ORDER_PAY_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case constants.ORDER_PAY_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = { loading: false, success: false }, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_DELIVER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case constants.ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case constants.ORDER_DELIVER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case constants.ORDER_DELIVER_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderNotDeliverReducer = (state = { loading: false, success: false }, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_NOT_DELIVER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case constants.ORDER_NOT_DELIVER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case constants.ORDER_NOT_DELIVER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case constants.ORDER_NOT_DELIVER_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const ordersReducer = (state = { orders: {} }, action) => {\r\n    switch (action.type) {\r\n        case constants.ORDER_LIST_REQUEST:\r\n            return { ...state, loading: true }\r\n        case constants.ORDER_LIST_SUCCESS:\r\n            return { ...state, loading: false, orders: action.payload }\r\n        case constants.ORDER_LIST_FAIL:\r\n            return { ...state, loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { constants } from '../constants/constant.js';\r\n\r\nexport const paypalClientIdReducer = (state = { paypalClientId: null }, action) => {\r\n    switch (action.type) {\r\n        case constants.PAYPAL_CLIENT_ID_REQUEST:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        case constants.PAYPAL_CLIENT_ID_SUCCESS:\r\n            return {\r\n                success: true,\r\n                paypalClientId: action.payload\r\n            }\r\n        case constants.PAYPAL_CLIENT_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const localStorageData = {\r\n    cartItemsFromLocalStorage: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\r\n    userInfoFromLocalStorage: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null,\r\n    userAsGuestInfoFromLocalStorage: localStorage.getItem('userAsGuestInfo') ? JSON.parse(localStorage.getItem('userAsGuestInfo')) : null,\r\n    shippingAddressFromLocalStorage: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null,\r\n}\r\n\r\nconst setLocal = (name, value) => {\r\n    localStorage.setItem(name, JSON.stringify(value));\r\n}\r\n\r\nexport { localStorageData, setLocal }","/** Basic Version of State */\r\n// import { createStore, applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import { composeWithDevTools } from 'remote-redux-devtools';\r\n// import { reducer } from './reducers/productReducer.js';\r\n\r\n// const initialState = {\r\n//     products: [],\r\n//     product: {},\r\n//     error: null,\r\n//     loading: false\r\n// };\r\n\r\n/** Combined Version of State */\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'remote-redux-devtools';\r\nimport { combinedReducer } from './reducers/combinedReducer.js';\r\nimport { localStorageData } from './localStorage.js';\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: localStorageData.cartItemsFromLocalStorage,\r\n        shippingAddress: localStorageData.shippingAddressFromLocalStorage\r\n    },\r\n    userLogin: {\r\n        userInfo: localStorageData.userInfoFromLocalStorage\r\n    },\r\n    userAsGuest: {\r\n        guestInfo: localStorageData.userAsGuestInfoFromLocalStorage\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\nlet composeEnhancers;\r\nlet store;\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    composeEnhancers = composeWithDevTools({ realtime: true, port: 8000 });\r\n    store = createStore(combinedReducer, initialState, composeEnhancers(applyMiddleware(...middleware)));\r\n} else {\r\n    store = createStore(combinedReducer, initialState, applyMiddleware(...middleware));\r\n}\r\n\r\nexport default store;","import React from 'react';\r\n\r\n/** Styles */\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright&copy; HappyShopping\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import axios from 'axios'\r\nimport { constants } from '../constants/constant.js'\r\n\r\nexport const userRegister = (registerData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: constants.USER_REGISTER_REQUEST });\r\n        const config = { headers: { 'Content-Type': 'Application/json' } };\r\n        const { data } = await axios.post(`/api/users/register`, registerData, config);\r\n        dispatch({\r\n            type: constants.USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: constants.USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.USER_REGISTER_FAILED,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const userLogin = (loginData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: constants.USER_LOGIN_REQUEST });\r\n        const config = { headers: { 'Content-Type': 'Application/json' } };\r\n        const { data } = await axios.post(`/api/users/login`, loginData, config);\r\n        dispatch({\r\n            type: constants.USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.USER_LOGIN_FAILED,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n    localStorage.removeItem('userAsGuestInfo');\r\n}\r\n\r\nexport const userAsGuest = (guestData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: constants.USER_AS_GUEST_REQUEST });\r\n        const config = { headers: { 'Content-Type': 'Application/json' } };\r\n        const { data } = await axios.post(`/api/users/register/visitor`, guestData, config);\r\n        dispatch({\r\n            type: constants.USER_AS_GUEST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userAsGuestInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.USER_AS_GUEST_FAILED,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const userLogout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    localStorage.removeItem('userPaymentMethod');\r\n    localStorage.removeItem('userAsGuestInfo');\r\n    dispatch({ type: constants.USER_LOGIN_RESET });\r\n    dispatch({ type: constants.USER_AS_GUEST_RESET });\r\n    dispatch({ type: constants.USER_REGISTER_RESET });\r\n    dispatch({ type: constants.USER_DETAILS_RESET });\r\n    dispatch({ type: constants.MY_ORDERS_RESET });\r\n    dispatch({ type: constants.USER_LIST_RESET });\r\n    // document.location.href = '/login'\r\n}\r\n\r\nexport const removeUserRegisterErrors = () => (dispatch) => {\r\n    dispatch({ type: constants.REMOVE_USER_REGISTER_ERRORS });\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: constants.USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(userLogout())\r\n        }\r\n        dispatch({\r\n            type: constants.USER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.USER_PROFILE_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: constants.USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: constants.USER_PROFILE_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: constants.USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(userLogout())\r\n        }\r\n        dispatch({\r\n            type: constants.USER_PROFILE_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.USER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: constants.USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.USER_LIST_FAILED,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserList_NoLoading = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.USER_LIST_REQUEST_NO_LOADING,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: constants.USER_LIST_SUCCESS_NO_LOADING,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.USER_LIST_FAILED_NO_LOADING,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'Application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: constants.USER_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.USER_DELETE_FAILED,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const editUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.USER_EDIT_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.put(`/api/users/${user.id}`, user, config)\r\n\r\n        dispatch({\r\n            type: constants.USER_EDIT_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(userLogout())\r\n        }\r\n        dispatch({\r\n            type: constants.USER_EDIT_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport throttle from 'lodash/throttle';\r\n\r\nconst getDeviceConfig = (width) => {\r\n    if (width < 320) {\r\n        return 'xs'\r\n    } else if (width >= 320 && width < 720) {\r\n        return 'sm'\r\n    } else if (width >= 720 && width < 1024) {\r\n        return 'md'\r\n    } else if (width >= 1024) {\r\n        return 'lg'\r\n    }\r\n}\r\n\r\nconst useBreakpoint = () => {\r\n    const [brkPnt, setBrkPnt] = useState(() => getDeviceConfig(window.innerWidth));\r\n    const [width, setWidth] = useState(() => window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        const calcInnerWidth = throttle(function () {\r\n            setBrkPnt(getDeviceConfig(window.innerWidth))\r\n            setWidth(window.innerWidth)\r\n        }, 200);\r\n        window.addEventListener('resize', calcInnerWidth);\r\n        return () => window.removeEventListener('resize', calcInnerWidth);\r\n    }, []);\r\n\r\n    return { brkPnt, width };\r\n}\r\nexport default useBreakpoint;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n/** actions */\r\nimport { userLogout } from '../actions/userActions.js'\r\n\r\n/** Styles */\r\nimport { Navbar, Nav, NavDropdown, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n/** Custom Hooks */\r\nimport useBreakpoint from '../customHooks/useBreakpoint';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst Header = ({ history }) => {\r\n    const { t } = useTranslation();\r\n    const { i18n } = useTranslation();\r\n    const [lang, setLang] = useState('de')\r\n\r\n    const changeLanguage = (e) => {\r\n        i18n.changeLanguage(e.target.value);\r\n        setLang(e.target.value)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const { width } = useBreakpoint();\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const isLoggedIn = userInfo ? true : false;\r\n\r\n    // useEffect(() => {\r\n    //     const main = document.getElementById('main');\r\n    //     main.addEventListener('click', toggle)\r\n    //     return () => main.removeEventListener('click', toggle)\r\n    // }, [])\r\n\r\n    // const toggle = () => {\r\n    //     const toggler = document.querySelector('button.navbar-toggler');\r\n    //     const navbar = document.querySelector('div#collapse');\r\n    //     if (navbar.classList.contains('show') && !toggler.classList.contains('collapsed')) {\r\n    //         toggler.classList.add('collapsed');\r\n    //         navbar.classList.remove('show')\r\n    //         navbar.classList.remove('collapse')\r\n    //         navbar.classList.add('collapsing');\r\n    //         setTimeout(() => {\r\n    //             navbar.classList.remove('collapsing');\r\n    //             navbar.classList.add('collapse');\r\n    //         }, 100);\r\n    //     }\r\n    // }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(userLogout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" fixed=\"top\" variant=\"dark\" expand=\"md\" collapseOnSelect>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>HappyShopping</Navbar.Brand>\r\n                </LinkContainer>\r\n\r\n                {\r\n                    userInfo?.isAdmin && width >= 768 && (\r\n                        <NavDropdown title={t('admin-menu')} id='adminmenu' className=\"d-md-flex flex-column justify-content-md-center\">\r\n                            <LinkContainer to='/admin/userlist'>\r\n                                <NavDropdown.Item>{t('users')}</NavDropdown.Item>\r\n                            </LinkContainer>\r\n\r\n                            <NavDropdown.Divider />\r\n\r\n                            <LinkContainer to='/admin/productlist'>\r\n                                <NavDropdown.Item>{t('products')}</NavDropdown.Item>\r\n                            </LinkContainer>\r\n\r\n                            <NavDropdown.Divider />\r\n\r\n                            <LinkContainer to='/admin/orderlist'>\r\n                                <NavDropdown.Item>{t('orders')}</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                        </NavDropdown>\r\n                    )\r\n                }\r\n\r\n                <Navbar.Toggle aria-controls=\"collapse\" />\r\n\r\n                <Navbar.Collapse id=\"collapse\">\r\n                    <Nav className=\"ml-auto\">\r\n                        {isLoggedIn ? (\r\n                            <>\r\n                                {\r\n                                    userInfo?.isAdmin && width < 768 && (\r\n                                        <NavDropdown title={t('admin-menu')} id='adminmenu' className=\"d-md-flex flex-column justify-content-md-center\">\r\n                                            <LinkContainer to='/admin/userlist'>\r\n                                                <NavDropdown.Item>{t('users')}</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n\r\n                                            <NavDropdown.Divider />\r\n\r\n                                            <LinkContainer to='/admin/productlist'>\r\n                                                <NavDropdown.Item>{t('products')}</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n\r\n                                            <NavDropdown.Divider />\r\n\r\n                                            <LinkContainer to='/admin/orderlist'>\r\n                                                <NavDropdown.Item>{t('orders')}</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                        </NavDropdown>\r\n                                    )\r\n                                }\r\n\r\n                                <NavDropdown title={userInfo.name} id='username' className=\"d-md-flex flex-column justify-content-md-center\">\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>{t('profile')}</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Divider />\r\n\r\n                                    <LinkContainer to='/my-orders'>\r\n                                        <NavDropdown.Item>{t('my-orders')}</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Divider />\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>{t('logout')}</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </>\r\n                        ) : (\r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link>\r\n                                    <Button variant=\"outline-light border-0\" size=\"sm\">\r\n                                        <i className=\"fas fa-user mr-2\"></i> {t('login')}\r\n                                    </Button>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link>\r\n                                <Button variant=\"outline-light border-0\" size=\"sm\" className=\"position-relative\">\r\n                                    <i className=\"fas fa-shopping-cart\"></i>\r\n                                    {\r\n                                        cartItems?.length !== 0 && (\r\n                                            <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill badge-warning text-dark\">\r\n                                                {cartItems.length}\r\n                                            </span>\r\n                                        )\r\n                                    }\r\n                                    <span className={cartItems?.length !== 0 ? 'ml-3' : 'ml-2'}>{t('shopping-cart')}</span>\r\n                                </Button>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <ButtonGroup style={{ height: '30px' }}>\r\n                                <Button className={lang === 'de' ? 'border-0 bg-warning d-flex align-items-center' : 'border-0 bg-secondary d-flex align-items-center'} onClick={changeLanguage} value='de'>De</Button>\r\n                                <Button className={lang === 'en' ? 'border-0 bg-warning d-flex align-items-center' : 'border-0 bg-secondary d-flex align-items-center'} onClick={changeLanguage} value='en'>En</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import axios from 'axios'\r\nimport { constants } from '../constants/constant.js'\r\nimport { userLogout } from './userActions.js'\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: constants.PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type: constants.PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.PRODUCT_LIST_FAILED,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: constants.SINGLE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: constants.SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.SINGLE_PRODUCT_FAILED,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteSingleProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: constants.DELETE_SINGLE_PRODUCT_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'Application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        const { data } = await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: constants.DELETE_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.DELETE_SINGLE_PRODUCT_FAILED,\r\n            payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const editSingleProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.PRODUCT_EDIT_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.put(`/api/products/${product.id}`, product, config)\r\n\r\n        dispatch({\r\n            type: constants.PRODUCT_EDIT_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(userLogout())\r\n        }\r\n\r\n        dispatch({\r\n            type: constants.PRODUCT_EDIT_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.PRODUCT_NEW_ADD_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const productAdded = await axios.post(`/api/products/new`, product, config)\r\n\r\n        dispatch({\r\n            type: constants.PRODUCT_NEW_ADD_SUCCESS,\r\n            payload: productAdded.data\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(userLogout())\r\n        }\r\n\r\n        dispatch({\r\n            type: constants.PRODUCT_NEW_ADD_FAILED,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Ratings = ({ rating, numReviews, color }) => {\r\n    let nums = [1, 2, 3, 4, 5];\r\n    return (\r\n        <div>\r\n            {nums.map(num => (\r\n                <i key={num} className={rating >= num ? 'fas fa-star pr-1' : (rating >= (num - 0.5) ? 'fas fa-star-half-alt pr-1' : 'far fa-star pr-1')} style={{ color: color }}></i>\r\n            ))}\r\n            {numReviews && <span> {numReviews} reviews</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nRatings.defaultProp = {\r\n    color: 'gold'\r\n}\r\n\r\nRatings.propTypes = {\r\n    rating: PropTypes.number,\r\n    numReviews: PropTypes.number,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Ratings;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nconst ImgSlider = ({ productId, images, style }) => {\r\n    return (\r\n        <Carousel interval={null} style={{\r\n            width: style?.width ? style.width : '100%',\r\n            height: style?.height ? style.height : '100%',\r\n            cursor: images?.length === 1 ? 'auto' : 'pointer'\r\n        }} controls={images?.length === 1 ? false : true}>\r\n            {\r\n                images?.length !== 0 && images.map((image, i) => (\r\n                    <Carousel.Item key={i}>\r\n                        <Link to={`/products/${productId}`}>\r\n                            <img\r\n                                src={image?.path}\r\n                                alt={image.name}\r\n                                style={{\r\n                                    ...style,\r\n                                    objectFit: 'cover'\r\n                                }}\r\n                            />\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))\r\n            }\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ImgSlider\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, Badge } from 'react-bootstrap';\r\n\r\n/** Components */\r\nimport Ratings from './Ratings';\r\nimport ImgSlider from './ImgSlider';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst Product = ({ product }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n    let history = useHistory()\r\n    const relocate = () => history.push(`/products/${product?._id}`)\r\n\r\n    return (\r\n        <>\r\n            <Card className='pb-3 rounded h-100'>\r\n                <ImgSlider productId={product?._id} images={product?.image} style={{ 'width': '100%', 'height': '300px' }} />\r\n\r\n                <Card.Body className=\"d-flex flex-column justify-content-between pointer pb-0\" onClick={relocate} style={{ cursor: 'pointer' }}>\r\n                    {/* <Link to={`/products/${product?._id}`} title={product?.description}> */}\r\n                    <Card.Title as='div'>\r\n                        <strong>{product?.name}</strong>\r\n                        <sup className=\"ml-2\">\r\n                            <Badge pill className=\"badge-warning px-2 py-1\">\r\n                                {t('go')}<i className=\"fas fa-external-link-alt pl-2 fa-xs\"></i>\r\n                            </Badge>\r\n                        </sup>\r\n                    </Card.Title>\r\n                    <Card.Text as='div'>\r\n                        <Ratings rating={product.rating} numReviews={product.numReviews} color='gold' />\r\n                        <h3 className=\"text-left mt-3\">{currency(product.price)}</h3>\r\n                    </Card.Text>\r\n                    {/* </Link> */}\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100vw',\r\n            height: '100vh',\r\n            display: 'Flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: 'rgba(0,0,0, .1)',\r\n            zIndex: 2\r\n        }}>\r\n            <Spinner animation='border' variant='info' style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n                zIndex: 1\r\n            }}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant} className=\"px-2\">\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n/** Bootstrap */\r\nimport { Row, Col, Card, ButtonGroup, Button } from 'react-bootstrap';\r\n\r\n// actons\r\nimport { getProducts } from '../actions/productActions.js'\r\n\r\n/** Components */\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HomeScreen = () => {\r\n    const { t } = useTranslation();\r\n    const { i18n } = useTranslation();\r\n\r\n    const [cats, setCats] = useState([])\r\n    const [selectedCat, setSelectedCat] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, error, products } = useSelector(state => state.products)\r\n    const [selectedProducts, setSelectedProducts] = useState([])\r\n\r\n    useEffect(() => {\r\n        dispatch(getProducts())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (products?.length) {\r\n            selectedCat && !(selectedCat === 'All' || selectedCat === 'Alle') ? setSelectedProducts(products.filter(product => product.category === selectedCat)) : setSelectedProducts(products)\r\n        }\r\n    }, [dispatch, products, selectedCat])\r\n\r\n    useEffect(() => {\r\n        if (!cats?.length && products) {\r\n            let arr = [];\r\n            products.forEach(product => {\r\n                let found = arr.find(item => item === product.category)\r\n                if (!found) {\r\n                    arr.push(product.category)\r\n                }\r\n            });\r\n            setCats(arr);\r\n        }\r\n    }, [cats, products])\r\n\r\n    useEffect(() => {\r\n        if (cats?.length && !cats.find(cat => (i18n.language === 'en' && cat === 'All') || (i18n.language === 'de' && cat === 'Alle'))) {\r\n            i18n.language === 'en' ? setCats(cats => {\r\n                cats = cats.filter(cat => cat !== 'Alle' && cat !== 'All')\r\n                return ['All', ...cats]\r\n            }) : setCats(cats => {\r\n                cats = cats.filter(cat => cat !== 'Alle' && cat !== 'All')\r\n                return ['Alle', ...cats]\r\n            })\r\n        }\r\n    }, [cats, i18n.language])\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Loader /> :\r\n                error ?\r\n                    <Message variant='danger' messageText={error} /> :\r\n                    <Row>\r\n\r\n                        <Col xs={12} md={3} lg={2} className=\"mb-4\">\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <h4>{t('categories')}:</h4>\r\n                                </Card.Header>\r\n\r\n                                <ButtonGroup vertical as={Card} className=\"p-0 border-0\">\r\n                                    {\r\n                                        cats?.length && cats.map((cat, i) => (\r\n                                            <Button key={i} className=\"btn btn-light text-info btn-outline-warning border-0 text-left pl-3\"\r\n                                                onClick={() => setSelectedCat(cat)}>\r\n                                                {cat}\r\n                                            </Button>\r\n                                        ))\r\n                                    }\r\n                                </ButtonGroup>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col xs={12} md={9} lg={10}>\r\n\r\n                            <h2 className=\"mb-3\">{t('latest-products')}</h2>\r\n\r\n                            <Row>\r\n                                {\r\n                                    selectedProducts.map(product => (\r\n                                        <Col key={product._id} xs={12} md={6} lg={4} className=\"mb-3\">\r\n                                            <Product product={product}></Product>\r\n                                        </Col>\r\n                                    ))\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios';\r\nimport { constants } from '../constants/constant.js';\r\nimport { setLocal } from '../localStorage.js';\r\n\r\nexport const addProductToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n        dispatch({\r\n            type: constants.CART_ADD_ITEM,\r\n            payload: {\r\n                _id: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        })\r\n        setLocal('cartItems', getState().cart.cartItems);\r\n    } catch (error) {\r\n        // dispatch({\r\n        //     type: constants.PRODUCT_LIST_FAILED,\r\n        //     payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        // })\r\n    }\r\n}\r\n\r\nexport const removeProductFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: constants.CART_REMOVE_ITEM,\r\n        payload: {\r\n            id: id\r\n        }\r\n    })\r\n    setLocal('cartItems', getState().cart.cartItems);\r\n}\r\n\r\nexport const saveShippingAddress = (shippingData) => async (dispatch) => {\r\n    dispatch({\r\n        type: constants.CART_SAVE_USER_SHIPPING_ADDRESS,\r\n        payload: shippingData\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(shippingData))\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: constants.CART_SAVE_USER_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    // localStorage.setItem('userPaymentMethod', JSON.stringify(paymentMethod))\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Row, Col, ListGroup, Card, Button, Form, Container } from 'react-bootstrap';\r\n\r\n// actions\r\nimport { getSingleProduct } from '../actions/productActions.js'\r\nimport { addProductToCart, removeProductFromCart } from '../actions/cartActions.js';\r\n\r\n/** Components */\r\nimport Ratings from '../components/Ratings';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport ImgSlider from '../components/ImgSlider.js';\r\n\r\n// Custom Hooks\r\nimport useBreakpoint from '../customHooks/useBreakpoint';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const { width } = useBreakpoint();\r\n\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const dispatch = useDispatch()\r\n    const { loading, error, product } = useSelector(state => state.product)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n    const { userInfo: user } = useSelector(state => state.userLogin)\r\n\r\n    const initial = cartItems.filter(item => item._id === match.params.id).length ? true : false;\r\n    const [isInCart, setIsInCart] = useState(initial);\r\n\r\n    /** If state is in Basic Version */\r\n    // const { loading, error, product } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id])\r\n\r\n    const addToCartHandler = () => {\r\n        // history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n        dispatch(addProductToCart(match.params.id, qty))\r\n        setIsInCart(true)\r\n    }\r\n\r\n    const removeFromCartHandler = () => {\r\n        dispatch(removeProductFromCart(match.params.id));\r\n        setIsInCart(false)\r\n    }\r\n\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n\r\n    console.log('qty: ', qty);\r\n    return (\r\n        <Container>\r\n            {loading ?\r\n                <Loader /> :\r\n                error ?\r\n                    <Message variant='danger' messageText={error}></Message> :\r\n                    (\r\n                        <>\r\n                            <Link to='/' className='btn btn-dark'>{t('go-back')}</Link>\r\n                            <Row className='my-3'>\r\n\r\n                                <Col md={12} lg={5} className=\"d-flex no-gutter justify-content-center align-items-center my-3\" style={width < 576 ? { 'height': '200px' } : { 'height': '400px' }}>\r\n                                    {/* <Image src={product?.image} fluid className=\"w-100 h-100\" style={{ 'objectFit': 'cover' }} /> */}\r\n                                    {product && <ImgSlider productId={product._id} images={product.image} style={{ 'width': '100%', 'height': width < 576 ? '200px' : '400px' }} />}\r\n                                </Col>\r\n\r\n                                <Col md={7} lg={4}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item className='px-0'>\r\n                                            <h3>{product?.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item className='px-0'>\r\n\r\n                                            <Ratings rating={product?.rating} numReviews={product?.numReviews} color='gold'></Ratings>\r\n\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item className='px-0'>\r\n                                            {t('price')}: {currency(product?.price)}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item className='px-0'>\r\n                                            {t('description')}: {product?.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col md={5} lg={3} className=\"my-3\">\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>{t('price')}: </Col>\r\n                                                    <Col><strong>{currency(product?.price)}</strong></Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status: </Col>\r\n                                                    <Col>{product?.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col className=\"d-flex align-items-center\">{t('quantity')}: </Col>\r\n                                                    <Col>\r\n                                                        {product?.countInStock > 0 && (\r\n                                                            <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                                {[...Array(product.countInStock).keys()].map((num) =>\r\n                                                                    <option key={num}>{num + 1}</option>\r\n                                                                )}\r\n                                                            </Form.Control>\r\n                                                        )}</Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    {isInCart ? (\r\n                                                        <Button type='button' className=\"btn btn-block\"\r\n                                                            disabled={product?.countInStock <= 0 ? true : false}\r\n                                                            onClick={removeFromCartHandler}>\r\n                                                            <i className=\"fas fa-times mr-2\"></i>\r\n                                                            {t('remove-from-cart')}\r\n                                                        </Button>\r\n                                                    ) : (\r\n                                                        <Button type='button' className=\"btn btn-block\"\r\n                                                            disabled={product?.countInStock <= 0 ? true : false}\r\n                                                            onClick={addToCartHandler}>\r\n                                                            <i className=\"fas fa-plus mr-2\"></i>\r\n                                                            {t('add-to-cart')}\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Link to='/cart' className='btn btn-info btn-block mt-2'>\r\n                                                        <i className=\"fas fa-shopping-cart mr-2\"></i>\r\n                                                        {t('go-to-cart')}\r\n                                                    </Link>\r\n                                                </Row>\r\n                                                {\r\n                                                    user?.isAdmin && (\r\n                                                        <Row>\r\n                                                            <Link to={`/admin/productedit/${match.params.id}/edit`} className='btn btn-warning btn-block mt-2'>\r\n                                                                <i className=\"fas fa-cut mr-2\"></i>\r\n                                                                {t('edit-product')}\r\n                                                            </Link>\r\n                                                        </Row>\r\n                                                    )\r\n                                                }\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductScreen;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Actions\r\nimport { addProductToCart, removeProductFromCart } from '../actions/cartActions.js';\r\n\r\n// Components\r\nimport Message from '../components/Message.js';\r\n\r\n// Bootstrap\r\nimport { Row, Col, Container, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const productId = match.params.id ? match.params.id : null;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n    const dispatch = useDispatch();\r\n    const { cartItems } = useSelector(state => state.cart);\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addProductToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const setQty = (id, value) => {\r\n        dispatch(addProductToCart(id, Number(value)))\r\n    }\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeProductFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <h2 className=\"mb-2\">{t('shopping-cart')}:</h2>\r\n                    {\r\n                        cartItems.length === 0 ? (\r\n                            <Message>\r\n                                {t('your-cart-is-empty')}.\r\n                                <Link to='/'>\r\n                                    <Button className=\"btn-sm ml-3\" variant='outline-info'>\r\n                                        <i className=\"fas fa-home pr-1\"></i> Home\r\n                                    </Button>\r\n                                </Link>\r\n                            </Message>\r\n                        ) : (\r\n                            <Row>\r\n                                <Col md={8} className=\"px-0\">\r\n                                    <ListGroup variant=''>\r\n                                        {cartItems.map((cartItem) => (\r\n                                            <ListGroup.Item key={cartItem._id} className=\"my-2 px-2 py-2\" style={{ backgroundColor: 'ghostwhite', borderTopWidth: '1px' }}>\r\n                                                <Row className=\"align-items-center m-0\">\r\n                                                    <Col xs={3} md={2} className='px-0'>\r\n                                                        <Image src={cartItem.image[0].path} alt={cartItem.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4} lg={5} className=\"d-none d-md-block fs-14 px-2 px-md-2 py-2\">\r\n                                                        <Link to={`/products/${cartItem._id}`}>\r\n                                                            {cartItem.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={2} className=\"d-none d-md-block px-0\">\r\n                                                        {currency(cartItem.price)}\r\n                                                    </Col>\r\n\r\n                                                    <Col md={2} className=\"d-none d-md-block px-0\">\r\n                                                        <Form.Control as='select' value={cartItem.qty} onChange={(e) => setQty(cartItem._id, e.target.value)}>\r\n                                                            {[...Array(cartItem.countInStock).keys()].map((num) =>\r\n                                                                <option key={num}>{num + 1}</option>\r\n                                                            )}\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={1} className=\"d-none d-md-block pr-0 text-right\">\r\n                                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(cartItem._id)}>\r\n                                                            <i className='fas fa-trash'></i>\r\n                                                        </Button>\r\n                                                    </Col>\r\n\r\n                                                    <Col xs={9} className=\"d-md-none align-items-stretch\">\r\n                                                        <Row className=\"justify-content-around align-items-center\">\r\n                                                            <Col className=\"d-flex-start fs-14 py-2\">\r\n                                                                <Link to={`/products/${cartItem._id}`}>\r\n                                                                    {cartItem.name}\r\n                                                                </Link>\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n                                                        <Row className=\"justify-content-around align-items-center\">\r\n                                                            <Col xs={5} className=\"d-flex-start\">\r\n                                                                {currency(cartItem.price)}\r\n                                                            </Col>\r\n\r\n                                                            <Col xs={4} className=\"text-right px-1\">\r\n                                                                <Form.Control as='select' value={cartItem.qty} onChange={(e) => setQty(cartItem._id, e.target.value)}>\r\n                                                                    {[...Array(cartItem.countInStock).keys()].map((num) =>\r\n                                                                        <option key={num}>{num + 1}</option>\r\n                                                                    )}\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n\r\n                                                            <Col xs={3} className=\"text-right px-0\">\r\n                                                                <Button type='button' variant='light' onClick={() => removeFromCartHandler(cartItem._id)}>\r\n                                                                    <i className='fas fa-trash'></i>\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col md={4} className=\"mb-5 px-0 pl-md-4\">\r\n                                    <Card className=\"my-2 text-right\">\r\n                                        <ListGroup variant='flush'>\r\n                                            <Card.Header className=\"p-3 text-right\">\r\n                                                <h5 className=\"mb-0\">\r\n                                                    {t('subtotal')}: <span className=\"text-nowrap\">{cartItems.reduce((acc, item) => acc + Number(item.qty), 0)} item</span>\r\n                                                </h5>\r\n                                            </Card.Header>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <h4> {currency(cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2))}</h4>\r\n                                            </ListGroup.Item>\r\n\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                    <Button type='button' className='btn btn-success btn-block'\r\n                                        disabled={cartItems.length === 0}\r\n                                        onClick={checkoutHandler}>\r\n                                        {t('proceed-checkout')}\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n// import FormContainer from '../components/FormContainer';\r\n\r\n// actions\r\nimport { userLogin } from '../actions/userActions';\r\n\r\n// bootstrap\r\nimport { Button, Form, Row, Col, Card, Container } from 'react-bootstrap';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, error, userInfo } = useSelector(state => state.userLogin);\r\n    const { cartItems } = useSelector(state => state.cart);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(userLogin({ email, password }));\r\n    }\r\n\r\n    const guestHandler = (e) => {\r\n        e?.preventDefault();\r\n        console.log('redirect: ', redirect);\r\n        redirect ? history.push(redirect) : cartItems?.length ? history.push('/shipping') : history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"px-0\">\r\n            <Row className=\"align-items-center justify-content-center\">\r\n                <Col className=\"col-12 col-md-7 col-lg-5\">\r\n                    <h3 className=\"mb-2\">{t('login')}</h3>\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {loading && <Loader />}\r\n\r\n                    <Card>\r\n                        <Card.Body className=\"px-2 px-md-3\">\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>{t('email-address')}</Form.Label>\r\n                                    <Form.Control type='email' placeholder={t('enter-email')} value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label>{t('password')}</Form.Label>\r\n                                    <Form.Control type='password' placeholder={t('enter-password')} value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary' className=\"btn-block\">{t('login')}</Button>\r\n\r\n                                <Row className=\"py-3\">\r\n                                    <Col className=\"text-left fs-14\">\r\n                                        <Button variant=\"link\" size=\"sm\" onClick={() => guestHandler()}>\r\n                                            <div className=\"text-left\">\r\n                                                <i className=\"fas fa-walking pr-1\"></i>\r\n                                                {t('continue-as-a-guest')}\r\n                                            </div>\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className=\"text-right fs-14\">\r\n                                        <Button variant=\"link\" size=\"sm\">\r\n                                            <div className=\"text-right\">\r\n                                                {t('new-customer')} ? {' '}\r\n                                                <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                                                    {t('register')}\r\n                                                    <i className=\"fas fa-sign-in-alt pl-1\"></i>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row >\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    const headerStyle = { minHeight: 'calc(100vh - 144px)' }\r\n    return (\r\n        <Container className=\"px-0\">\r\n            <Row className=\"justify-content-md-center\" style={headerStyle}>\r\n                <Col xs={12} md={9} lg={8} xl={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Form, Row, Col, Card, Badge } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n// actions\r\nimport { userRegister, removeUserRegisterErrors } from '../actions/userActions';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isPasswordOK, setIsPasswordOK] = useState(false);\r\n    const [isPasswordEmpty, setIsPasswordEmpty] = useState(true);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, error, userInfo } = useSelector(state => state.userRegister);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const checkPassword = password => {\r\n        let isEmpty = (password.trim().length && confirmPassword.trim().length) ? true : false;\r\n        setIsPasswordEmpty(isEmpty);\r\n        if (!isPasswordEmpty) {\r\n            var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n            if (password.match(passw)) {\r\n                setIsPasswordOK(true);\r\n            } else {\r\n                setIsPasswordOK(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords don\\'t match!')\r\n        } else if (!isPasswordOK) {\r\n            setMessage('Password should be between 6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter.');\r\n        } else if (!(name && email)) {\r\n            setMessage('Name or Email is missing!');\r\n        } else {\r\n            dispatch(userRegister({ name, email, password }));\r\n        }\r\n    }\r\n\r\n    const redirectTo = () => {\r\n        dispatch(removeUserRegisterErrors());\r\n        history.push(redirect ? `/login?redirect=${redirect}` : '/login');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h3 className=\"mb-2\">{t('register')}</h3>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Card>\r\n                <Card.Body className=\"p-2\">\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>{t('name-and-surname')}*</Form.Label>\r\n                            <Form.Control type='text' placeholder={t('enter-your-name-and-surname')} value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>{t('email-address')}*</Form.Label>\r\n                            <Form.Control type='email' placeholder={t('enter-email')} value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Label>{t('password')}*</Form.Label>\r\n                                </Col>\r\n                                <Col xs=\"auto\" className='d-flex align-items-center'>\r\n                                    {!isPasswordEmpty && (password && (isPasswordOK ? (\r\n                                        <Badge pill variant=\"success\">\r\n                                            <i className=\"fas fa-thumbs-up text-white\"></i>\r\n                                        </Badge>\r\n                                    ) : (\r\n                                        <Badge pill variant=\"secondary\">\r\n                                            <i className=\"fas fa-thumbs-down text-white\"></i>\r\n                                        </Badge>\r\n                                    )))}\r\n                                </Col>\r\n                            </Form.Row>\r\n                            <Form.Control type='password' placeholder={t('enter-password')} value={password} onChange={(e) => { setPassword(e.target.value); checkPassword(e.target.value) }}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Label>{t('confirm-password')}*</Form.Label>\r\n                                </Col>\r\n                                <Col xs=\"auto\" className='d-flex align-items-center'>\r\n                                    {!isPasswordEmpty && (confirmPassword && ((password === confirmPassword) ? (\r\n                                        <Badge pill variant=\"success\">\r\n                                            <i className=\"fas fa-thumbs-up text-white\"></i>\r\n                                        </Badge>\r\n                                    ) : (\r\n                                        <Badge pill variant=\"secondary\">\r\n                                            <i className=\"fas fa-thumbs-down text-white\"></i>\r\n                                        </Badge>\r\n                                    )))}\r\n                                </Col>\r\n                            </Form.Row>\r\n                            <Form.Control type='password' placeholder={t('enter-password-again')} value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                            <div>\r\n                                {!isPasswordEmpty && (confirmPassword && ((password === confirmPassword) ? (\r\n                                    <Badge variant='success'>\r\n                                        <i className=\"fas fa-check mr-1\"></i>\r\n                                        {t('match')}\r\n                                    </Badge>\r\n                                ) : (\r\n                                    <Badge variant='secondary'>\r\n                                        <i className=\"fas fa-times mr-1\"></i>\r\n                                        {t('not-match')}\r\n                                    </Badge>\r\n                                )))}\r\n                            </div>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary' className=\"btn-block\">{t('register')}</Button>\r\n\r\n                        <Row className=\"py-3\">\r\n                            <Col className=\"text-right fs-14\">\r\n                                {t('already-have-an-account')} ? {' '}\r\n                                <div onClick={redirectTo} style={{ cursor: 'pointer', color: '#e95420' }}>\r\n                                    {t('login')}\r\n                                    <i className=\"fas fa-sign-in-alt pl-1\"></i>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Form, Card, Col, Badge } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n// Constants for action types\r\nimport { constants } from '../constants/constant.js';\r\n\r\n// actions\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isPasswordOK, setIsPasswordOK] = useState(false);\r\n    const [isPasswordEmpty, setIsPasswordEmpty] = useState(true);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, error, user } = useSelector(state => state.userDetails);\r\n    console.log('user: ', user);\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    console.log('userInfo: ', userInfo);\r\n    const { success } = useSelector(state => state.userProfileUpdate);\r\n    console.log('success: ', success);\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: constants.USER_PROFILE_UPDATE_REQUEST })\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const checkPassword = password => {\r\n        let isEmpty = (password.trim().length && confirmPassword.trim().length) ? true : false;\r\n        setIsPasswordEmpty(isEmpty);\r\n        if (!isPasswordEmpty) {\r\n            var passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n            if (password.match(passw)) {\r\n                setIsPasswordOK(true);\r\n            } else {\r\n                setIsPasswordOK(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords don\\'t match!')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h2 className=\"mb-2\">{t('user-profile')}</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {success && <Message variant=\"success\">Profile Updated</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Card>\r\n                    <Card.Body className=\"p-2\">\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>{t('name-and-surname')}</Form.Label>\r\n                                <Form.Control type='name' placeholder={t('enter-your-name-and-surname')} value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>{t('email-address')}</Form.Label>\r\n                                <Form.Control type='email' placeholder={t('enter-email')} value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='password'>\r\n                                <Form.Row>\r\n                                    <Col>\r\n                                        <Form.Label>{t('password')}</Form.Label>\r\n                                    </Col>\r\n                                    <Col xs=\"auto\" className='d-flex align-items-center'>\r\n                                        {!isPasswordEmpty && (password && (isPasswordOK ? (\r\n                                            <Badge pill variant=\"success\">\r\n                                                <i className=\"fas fa-thumbs-up text-white\"></i>\r\n                                            </Badge>\r\n                                        ) : (\r\n                                            <Badge pill variant=\"secondary\">\r\n                                                <i className=\"fas fa-thumbs-down text-white\"></i>\r\n                                            </Badge>\r\n                                        )))}\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <Form.Control type='password' placeholder={t('enter-password')} value={password} onChange={(e) => { setPassword(e.target.value); checkPassword(e.target.value) }}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='confirmPassword'>\r\n                                <Form.Row>\r\n                                    <Col>\r\n                                        <Form.Label>{t('confirm-password')}</Form.Label>\r\n                                    </Col>\r\n                                    <Col xs=\"auto\" className='d-flex align-items-center'>\r\n                                        {!isPasswordEmpty && (confirmPassword && ((password === confirmPassword) ? (\r\n                                            <Badge pill variant=\"success\">\r\n                                                <i className=\"fas fa-thumbs-up text-white\"></i>\r\n                                            </Badge>\r\n                                        ) : (\r\n                                            <Badge pill variant=\"secondary\">\r\n                                                <i className=\"fas fa-thumbs-down text-white\"></i>\r\n                                            </Badge>\r\n                                        )))}\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <Form.Control type='password' placeholder={t('enter-password-again')} value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                                <div>\r\n                                    {!isPasswordEmpty && (confirmPassword && ((password === confirmPassword) ? (\r\n                                        <Badge variant='success'>\r\n                                            <i className=\"fas fa-check mr-1\"></i>\r\n                                            {t('match')}\r\n                                        </Badge>\r\n                                    ) : (\r\n                                        <Badge variant='secondary'>\r\n                                            <i className=\"fas fa-times mr-1\"></i>\r\n                                            {t('not-match')}\r\n                                        </Badge>\r\n                                    )))}\r\n                                </div>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary' className=\"btn-block\">{t('update')}</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3 }) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Nav className=\"justify-content-center  align-items-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>\r\n                            <h4 className='mb-0 fs-20'>{t('login')}</h4>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>{t('login')}</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            {step2 ? (\r\n                <Nav.Item>\r\n                    <strong><i className=\"fas fa-greater-than text-danger\"></i><i className=\"fas fa-greater-than text-danger\"></i></strong>\r\n                </Nav.Item>\r\n            ) : (\r\n                <Nav.Item>\r\n                    <i className=\"fas fa-greater-than text-secondary\"></i>\r\n                </Nav.Item>\r\n            )}\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>\r\n                            <h4 className='mb-0 fs-20'>{t('shipping')}</h4>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>{t('shipping')}</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            {/* {step3 ? (\r\n                <Nav.Item>\r\n                    <strong><i className=\"fas fa-greater-than text-danger\"></i><i className=\"fas fa-greater-than text-danger\"></i></strong>\r\n                </Nav.Item>\r\n            ) : (\r\n                <Nav.Item>\r\n                    <i className=\"fas fa-greater-than text-secondary\"></i>\r\n                </Nav.Item>\r\n            )}\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment-method\">\r\n                        <Nav.Link>\r\n                            <h4 className='mb-0'>Payment</h4>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item> */}\r\n\r\n            {step3 ? (\r\n                <Nav.Item>\r\n                    <strong><i className=\"fas fa-greater-than text-danger\"></i><i className=\"fas fa-greater-than text-danger\"></i></strong>\r\n                </Nav.Item>\r\n            ) : (\r\n                <Nav.Item>\r\n                    <i className=\"fas fa-greater-than text-secondary\"></i>\r\n                </Nav.Item>\r\n            )}\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>\r\n                            <h4 className='mb-0 fs-20'>{t('place-order')}</h4>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>{t('place-order')}</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import axios from 'axios'\r\nimport { constants } from '../constants/constant.js'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        let orderData;\r\n\r\n        const {\r\n            userAsGuest: { guestInfo },\r\n        } = getState()\r\n\r\n        if (!(guestInfo && order?.visitor)) {\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState()\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post(`/api/orders`, order, config)\r\n            orderData = data;\r\n        } else {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post(`/api/orders/visitor-order`, order, config)\r\n            orderData = data;\r\n        }\r\n\r\n        console.log('orderData: ', orderData);\r\n\r\n        dispatch({\r\n            type: constants.ORDER_CREATE_SUCCESS,\r\n            payload: orderData,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.ORDER_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const cancelOrder = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.ORDER_CANCEL_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.delete(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: constants.ORDER_CANCEL_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.ORDER_CANCEL_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetailsById = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.ORDER_DETAILS_BY_ID_REQUEST,\r\n        })\r\n\r\n        let orderDetails;\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        if (userInfo) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            orderDetails = data;\r\n        } else {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const { data } = await axios.get(`/api/orders/visitor-order/${id}`, config)\r\n            orderDetails = data;\r\n        }\r\n\r\n        dispatch({\r\n            type: constants.ORDER_DETAILS_BY_ID_SUCCESS,\r\n            payload: orderDetails,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.ORDER_DETAILS_BY_ID_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.MY_ORDERS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: constants.MY_ORDERS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.MY_ORDERS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        // const {\r\n        //     userLogin: { userInfo },\r\n        // } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        console.log('data: ', data);\r\n\r\n        dispatch({\r\n            type: constants.ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.ORDER_PAY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrderAdmin = (order, paymentByAdmin) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.ORDER_PAY_ADMIN_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        let payData;\r\n\r\n        if (!order?.isPaid) {\r\n            const { data } = await axios.put(`/api/orders/${order._id}/pay-admin`, paymentByAdmin, config)\r\n            payData = data;\r\n        } else {\r\n            const { data } = await axios.put(`/api/orders/${order._id}/pay-admin-not`, paymentByAdmin, config)\r\n            payData = data;\r\n        }\r\n\r\n        dispatch({\r\n            type: constants.ORDER_PAY_ADMIN_SUCCESS,\r\n            payload: payData,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.ORDER_PAY_ADMIN_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/deliver`, null, config)\r\n        console.log('data: ', data);\r\n\r\n        dispatch({\r\n            type: constants.ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverNotOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.ORDER_NOT_DELIVER_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/not-deliver`, null, config)\r\n        console.log('data: ', data);\r\n\r\n        dispatch({\r\n            type: constants.ORDER_NOT_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.ORDER_NOT_DELIVER_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: constants.ORDER_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders', config);\r\n        console.log('data: ', data);\r\n\r\n        dispatch({\r\n            type: constants.ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.ORDER_LIST_FAILED,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\n// import Loader from '../components/Loader';\r\n// import FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\n// Actions\r\nimport { createOrder } from '../actions/orderActions.js';\r\nimport { constants } from '../constants/constant';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst PlaceOrdersScreen = ({ history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart);\r\n    const { guestInfo: guest } = useSelector(state => state.userAsGuest);\r\n\r\n    // Calculator\r\n    const addDecimals = (num) => Math.round((num * 100) / 100).toFixed(2)\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, curr) => acc + curr.price * curr.qty, 0));\r\n    // cart.shippingPrice = cart.itemsPrice > 100 ? addDecimals(0) : Number(10);\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? addDecimals(0) : Number(0);\r\n    // cart.taxPrice = addDecimals(.19 * cart.itemsPrice);\r\n    cart.taxPrice = 0;\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice));\r\n\r\n    const { order, success, error } = useSelector(state => state.orderCreate)\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            dispatch({ type: constants.ORDER_CREATE_RESET })\r\n            history.push(`/orders/${order._id}`)\r\n        }\r\n    }, [history, success, order, dispatch])\r\n\r\n    const placeOrderHandler = () => {\r\n        if (!guest) {\r\n            dispatch(createOrder({\r\n                cartItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod ? cart.paymentMethod : 'PayPal',\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            }))\r\n        } else {\r\n            dispatch(createOrder({\r\n                visitor: guest,\r\n                cartItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod ? cart.paymentMethod : 'PayPal',\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            }))\r\n        }\r\n    }\r\n\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n    console.log('cart.cartItems: ', cart.cartItems);\r\n\r\n    return (\r\n        <Container>\r\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n            <Row>\r\n                <Col lg={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item className=\"px-0\">\r\n                            <h4 className=\"mb-2\">{t('shipping')}:</h4>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <p className='mb-0'>\r\n                                        {t('address')}:\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className='mb-0'>\r\n                                        {(cart.shippingAddress?.street && cart.shippingAddress?.number) &&\r\n                                            `${cart.shippingAddress.street} ${cart.shippingAddress.number}`}\r\n                                    </span>\r\n                                    <span className='mb-0'>\r\n                                        {cart.shippingAddress?.zipcode &&\r\n                                            ` ${cart.shippingAddress?.zipcode}`},\r\n                                        {cart.shippingAddress?.city &&\r\n                                            ` ${cart.shippingAddress?.city}`},\r\n                                        {cart.shippingAddress?.country &&\r\n                                            ` ${cart.shippingAddress?.country}`}\r\n                                    </span>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {/* <ListGroup.Item className=\"px-0\">\r\n                            <h3>Payment Method:</h3>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <p className='mb-0'>\r\n                                        Method:\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <p className='mb-0'>\r\n                                        {cart?.paymentMethod && `${cart?.paymentMethod}`}\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item> */}\r\n\r\n                        <ListGroup.Item className=\"px-0\">\r\n                            <h4 className=\"mb-2\">{t('order-items')}:</h4>\r\n                            {!cart?.cartItems?.length ? (\r\n                                <Message>{t('your-cart-is-empty')}.</Message>\r\n                            ) : (\r\n                                <ListGroup variant=''>\r\n                                    {cart.cartItems.map((cartItem, index) => (\r\n                                        <ListGroup.Item key={index} className=\"my-2 p-2\" style={{ backgroundColor: 'ghostwhite', borderTopWidth: '1px' }}>\r\n                                            <Row className=\"align-items-center m-0\">\r\n                                                <Col xs={2} lg={1} className='px-0'>\r\n                                                    <Image src={cartItem.image[0].path} alt={cartItem.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col xs={6} lg={7} className=\"px-2 fs-12\">\r\n                                                    <Link to={`/products/${cartItem._id}`}>\r\n                                                        {cartItem.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col xs={4} className=\"px-0 fs-12\">\r\n                                                    {cartItem.qty} x {currency(cartItem.price)} = {currency(Number(cartItem.qty) * Number(cartItem.price))}\r\n                                                </Col>\r\n\r\n                                                {/* <Col md={1} className=\"col-2 col-md-1 pr-0 text-right\">\r\n                                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(cartItem._id)}>\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                    </Button>\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col lg={4} className=\"mb-5 pl-lg-4\">\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item className='px-0'>\r\n                            <Card className=\"my-2 text-right\">\r\n                                <ListGroup variant='flush'>\r\n                                    <Card.Header className=\"p-3 text-right\">\r\n                                        <h5 className=\"mb-0 text-center\">\r\n                                            {t('order-summary')}\r\n                                        </h5>\r\n                                    </Card.Header>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col xs={4} className='px-1'>\r\n                                                {t('items')}:\r\n                                            </Col>\r\n                                            <Col xs={8} className='pr-4 text-right'>\r\n                                                {currency(cart.itemsPrice)}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col xs={4} className='px-1'>\r\n                                                {t('shipping')}:\r\n                                            </Col>\r\n                                            <Col xs={8} className='pr-4 text-right'>\r\n                                                {currency(cart.shippingPrice)}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col xs={4} className='px-1'>\r\n                                                {t('tax')}:\r\n                                            </Col>\r\n                                            <Col xs={8} className='pr-4 text-right'>\r\n                                                {currency(cart.taxPrice)}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item> */}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col xs={4} className='px-1'>\r\n                                                <h5><strong>{t('total')}:</strong></h5>\r\n                                            </Col>\r\n                                            <Col xs={8} className='pr-4 text-right'>\r\n                                                <h5><strong>{currency(cart.totalPrice)}</strong></h5>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n\r\n                            </Card>\r\n\r\n                            {\r\n                                error &&\r\n                                <Message variant='danger'>\r\n                                    {error}\r\n                                </Message>\r\n                            }\r\n\r\n                            <Button type='button' className='btn btn-success btn-block'\r\n                                disabled={!cart.cartItems.length}\r\n                                onClick={placeOrderHandler}>\r\n                                {t('place-order')}\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PlaceOrdersScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Row, Col, ListGroup, Image, Card, Button, Container } from 'react-bootstrap';\r\n\r\n// Paypal Button\r\n// import { loadScript } from \"@paypal/paypal-js\";\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n// import FormContainer from '../components/FormContainer';\r\n\r\n// Actions\r\nimport { getOrderDetailsById, payOrder, deliverOrder, deliverNotOrder, cancelOrder, payOrderAdmin } from '../actions/orderActions.js';\r\nimport { getPayPalScript } from '../actions/configActions.js';\r\nimport { constants } from '../constants/constant.js'\r\n\r\n/** i18n */\r\nimport { useTranslation, Trans } from 'react-i18next'\r\n\r\nconst OrdersScreen = ({ match, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const orderId = match.params.id;\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { order, loading, error } = useSelector(state => state.orderDetailsById);\r\n    const { loading: loadingPay, success: successPay, error: errorPay } = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPayAdmin, success: successPayAdmin, error: errorPayAdmin } = useSelector((state) => state.orderPayAdmin);\r\n    const { loading: loadingDeliver, success: successDeliver, error: errorDeliver } = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingNotDeliver, success: successNotDeliver, error: errorNotDeliver } = useSelector((state) => state.orderNotDeliver);\r\n    const { success: successCancel, error: errorCancel } = useSelector((state) => state.orderCancel);\r\n    const { paypalClientId } = useSelector((state) => state.paypalClientId);\r\n\r\n    // Calculator\r\n    if (!loading && !loadingPay) {\r\n        const addDecimals = (num) => Math.round((num * 100) / 100).toFixed(2)\r\n        order && (order.itemsPrice = addDecimals(order.cartItems.reduce((acc, curr) => acc + curr.price * curr.qty, 0)));\r\n    }\r\n\r\n    useEffect(() => {\r\n        const removeScript = async () => {\r\n            const script = document.getElementById('script')\r\n            script && script.remove();\r\n        }\r\n\r\n        if (!order || successPay || successPayAdmin || successDeliver || successNotDeliver || order?._id !== orderId) {\r\n            removeScript()\r\n            dispatch({ type: constants.ORDER_PAY_RESET })\r\n            dispatch({ type: constants.ORDER_PAY_ADMIN_RESET })\r\n            dispatch({ type: constants.ORDER_DELIVER_RESET })\r\n            dispatch({ type: constants.ORDER_NOT_DELIVER_RESET })\r\n            dispatch(getOrderDetailsById(orderId))\r\n        }\r\n    }, [dispatch, orderId, successPay, order, successDeliver, successNotDeliver, successPayAdmin])\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async (clientId) => {\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.id = 'paypalScript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&buyer-country=DE&currency=EUR&locale=de_DE`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (order && order.user) {\r\n            if (!userInfo) {\r\n                history.push('/login')\r\n            }\r\n        }\r\n\r\n        if (order && !order.isPaid) {\r\n            if (!window.paypal) {\r\n                dispatch(getPayPalScript())\r\n\r\n                if (paypalClientId) {\r\n                    addPayPalScript(paypalClientId)\r\n                    console.log('paypalClientId: ', paypalClientId);\r\n                    // loadScript({ \"client-id\": paypalClientId })\r\n                    //     .then(() => {\r\n                    //         setSdkReady(true)\r\n                    //     })\r\n                    //     .catch(e => console.log('e: ', e));\r\n                }\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, sdkReady, paypalClientId, userInfo, history])\r\n\r\n    useEffect(() => {\r\n        if (successCancel) {\r\n            history.push('/cart')\r\n        }\r\n\r\n        return () => {\r\n            if (successCancel || errorCancel) {\r\n                dispatch({ type: constants.ORDER_CANCEL_RESET })\r\n            };\r\n        }\r\n    }, [dispatch, history, successCancel, errorCancel])\r\n\r\n    const successPaymentHandler = (paymentResult, data) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n        dispatch({ type: constants.CART_ITEMS_RESET })\r\n    }\r\n\r\n    const successAdminPaymentHandler = () => {\r\n        if (userInfo?.isAdmin) {\r\n            const paymentByAdmin = {\r\n                id: userInfo._id,\r\n                status: !order?.isPaid ? \"MARKED AS PAID BY ADMIN\" : \"MARKED AS NOT PAID BY ADMIN\",\r\n                update_time: Date.now(),\r\n                email_address: userInfo.email\r\n            }\r\n            dispatch(payOrderAdmin(order, paymentByAdmin))\r\n        }\r\n    }\r\n\r\n    const successDeliverHandler = () => {\r\n        if (!order.isDelivered) {\r\n            dispatch(deliverOrder(orderId))\r\n        } else {\r\n            dispatch(deliverNotOrder(orderId))\r\n        }\r\n    }\r\n\r\n    const paypalErrorHandler = (e) => {\r\n        console.log('error: ', e);\r\n    }\r\n\r\n    const removeOrder = (id) => dispatch(cancelOrder(id))\r\n\r\n    const showDate = (str) => new Date(str).toLocaleDateString('de-DE', { dateStyle: 'full' })\r\n    const showTime = (str) => new Date(str).toLocaleTimeString('de-DE', { timeStyle: 'short' })\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n\r\n    console.log('order: ', order);\r\n\r\n    return loading || loadingPay || loadingPayAdmin || loadingDeliver || loadingNotDeliver ?\r\n        <Loader /> :\r\n        error || errorPay || errorPayAdmin || errorDeliver || errorNotDeliver ?\r\n            <Message variant='danger'>{error || errorPay || errorPayAdmin || errorDeliver || errorNotDeliver}</Message> :\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={8}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item className='px-0'>\r\n                                <h4 className=\"mb-2\">{t('payment')}:</h4>\r\n                                {/* <Row>\r\n                                    <Col md={2}>\r\n                                        <p className='mb-0'>\r\n                                            <strong>Method:</strong>\r\n                                        </p>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <p className='mb-0'>\r\n                                            {order?.paymentMethod && `${order.paymentMethod}`}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row> */}\r\n                                <Row>\r\n                                    <Col className='col-12 mt-2'>\r\n                                        {\r\n                                            order?.isPaid ? (\r\n                                                <Message variant='success'>\r\n                                                    <Trans i18nKey='paid-message'>\r\n                                                        Paid on {showDate(order?.paidAt)} at {showTime(order?.paidAt)}\r\n                                                    </Trans>\r\n                                                </Message>\r\n                                            ) : (\r\n                                                <Message variant='danger'>{t('not-paid-yet')}.</Message>\r\n                                            )\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"px-0\">\r\n                                <h4 className=\"mb-2\">{t('shipping')}</h4>\r\n                                {\r\n                                    (order?.user?.name || order?.visitor?.name) && (\r\n                                        <Row>\r\n                                            <Col md={4} className='mb-0'>\r\n                                                <strong>{t('name-and-surname')}: </strong>\r\n                                            </Col>\r\n                                            <Col md={8} className='mb-0'>\r\n                                                <span>\r\n                                                    {order.user ? order.user.name : (order.visitor && order.visitor.name)}\r\n                                                </span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n\r\n                                {\r\n                                    (order?.user?.email || order?.visitor?.email) && (\r\n                                        <Row>\r\n                                            <Col md={4} className='mb-0'>\r\n                                                <strong>Email: </strong>\r\n                                            </Col>\r\n                                            <Col md={8} className='mb-0'>\r\n                                                <span>\r\n                                                    {\r\n                                                        order.user ? (\r\n                                                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                                                        ) : (\r\n                                                            order.visitor && (\r\n                                                                <a href={`mailto:${order.visitor.email}`}>{order.visitor.email}</a>\r\n                                                            )\r\n                                                        )\r\n                                                    }\r\n                                                </span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        <p className='mb-0'>\r\n                                            <strong>{t('address')}: </strong>\r\n                                        </p>\r\n                                    </Col>\r\n                                    <Col md={8}>\r\n                                        <span className='mb-0'>\r\n                                            {(order?.shippingAddress?.street && order?.shippingAddress?.number) &&\r\n                                                `${order.shippingAddress.street} ${order.shippingAddress.number}`}\r\n                                        </span>\r\n                                        <span className='mb-0'>\r\n                                            {order?.shippingAddress?.zipcode &&\r\n                                                ` ${order.shippingAddress.zipcode}`},\r\n                                            {order?.shippingAddress?.city &&\r\n                                                ` ${order.shippingAddress.city}`},\r\n                                            {order?.shippingAddress?.country &&\r\n                                                ` ${order.shippingAddress.country}`}\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className='col-12 mt-2'>\r\n                                        {\r\n                                            order?.isDelivered ?\r\n                                                <Message variant='success'>\r\n                                                    <Trans i18nKey='delivered-message'>\r\n                                                        Delivered at {showDate(order?.deliveredAt)}\r\n                                                    </Trans>\r\n                                                </Message> :\r\n                                                <Message variant='danger'>{t('not-delivered-yet')}.</Message>\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className='px-0'>\r\n                                <h4 className=\"mb-2\">{t('order-items')}:</h4>\r\n                                {!order?.cartItems?.length ? (\r\n                                    <Message>{t('your-order-is-empty')}.</Message>\r\n                                ) : (\r\n                                    <ListGroup variant=''>\r\n                                        {order?.cartItems && order.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index} className=\"my-2 p-2\" style={{ backgroundColor: 'ghostwhite', borderTopWidth: '1px' }}>\r\n                                                <Row className=\"align-items-center m-0\">\r\n                                                    <Col xs={2} lg={1} className='px-0'>\r\n                                                        <Image src={item.image[0].path} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col xs={6} lg={7} className=\"px-2 py-2 fs-10\">\r\n                                                        <Link to={`/products/${item._id}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col xs={4} className=\"px-0 fs-12\">\r\n                                                        {item.qty} x {currency(item.price)} = {currency(Number(Number(item.qty) * Number(item.price)).toFixed(2))}\r\n                                                    </Col>\r\n\r\n                                                    {/* <Col md={1} className=\"col-2 col-md-1 pr-0 text-right\">\r\n                                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(orderItem._id)}>\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                    </Button>\r\n                                                </Col> */}\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n\r\n                    <Col lg={4} className=\"mb-5 pl-lg-4 col-lg-4\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item className='px-0'>\r\n                                <Card className=\"my-2 text-right\">\r\n                                    <ListGroup variant='flush'>\r\n                                        <Card.Header className=\"p-3 text-right\">\r\n                                            <h5 className=\"mb-0 text-center\">\r\n                                                {t('order-summary')}\r\n                                            </h5>\r\n                                        </Card.Header>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col xs={4} className='px-1'>\r\n                                                    <strong>{t('items')}:</strong>\r\n                                                </Col>\r\n                                                <Col xs={8} className='pr-4 text-right'>\r\n                                                    {currency(order.itemsPrice)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col xs={4} className='px-1'>\r\n                                                    <strong>{t('shipping')}:</strong>\r\n                                                </Col>\r\n                                                <Col xs={8} className='pr-4 text-right'>\r\n                                                    {currency(order.shippingPrice)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col xs={4} className='px-1'>\r\n                                                    <strong>{t('tax')}:</strong>\r\n                                                </Col>\r\n                                                <Col xs={8} className='pr-4 text-right'>\r\n                                                    {currency(order.taxPrice)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col xs={4} className='px-1'>\r\n                                                    <h5><strong>{t('total')}:</strong></h5>\r\n                                                </Col>\r\n                                                <Col xs={8} className='pr-4 text-right'>\r\n                                                    <h5><strong>{currency(order.totalPrice)}</strong></h5>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                    </ListGroup>\r\n\r\n                                    {\r\n                                        userInfo?.isAdmin &&\r\n                                        <Card.Footer className=\"p-2\">\r\n                                            {\r\n                                                order?.isPaid ? (\r\n                                                    <>\r\n                                                        <Button className=\"btn btn-block bg-danger\" onClick={successAdminPaymentHandler}>{t('mark-as-not-paid')}</Button>\r\n                                                        {\r\n                                                            order?.isDelivered ? (\r\n                                                                <Button className=\"btn btn-block bg-danger\" onClick={successDeliverHandler}>{t('mark-as-not-delivered')}</Button>\r\n                                                            ) : (\r\n                                                                <Button className=\"btn btn-block bg-info\" onClick={successDeliverHandler}>{t('mark-as-delivered')}</Button>\r\n                                                            )\r\n                                                        }\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        <Button className=\"btn btn-block bg-success\" onClick={successAdminPaymentHandler}>{t('mark-as-paid')}</Button>\r\n                                                        {\r\n                                                            order?.isDelivered ? (\r\n                                                                <Button className=\"btn btn-block bg-danger\" onClick={successDeliverHandler}>{t('mark-as-not-delivered')}</Button>\r\n                                                            ) : (\r\n                                                                <Button className=\"btn btn-block bg-info\" onClick={successDeliverHandler}>{t('mark-as-delivered')}</Button>\r\n                                                            )\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        </Card.Footer>\r\n                                    }\r\n\r\n                                </Card>\r\n\r\n                                {\r\n                                    error &&\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            {\r\n                                !order.isPaid && (\r\n                                    <>\r\n                                        <ListGroup.Item className='p-0'>\r\n                                            {loadingPay && <Loader />}\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                <PayPalButton\r\n                                                    amount={order.totalPrice}\r\n                                                    currency=\"EUR\"\r\n                                                    onSuccess={successPaymentHandler}\r\n                                                    shippingPreference=\"NO_SHIPPING\"\r\n                                                    catchError={paypalErrorHandler}\r\n                                                />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n\r\n                                        {\r\n                                            userInfo ? (\r\n                                                <ListGroup.Item className='p-0'>\r\n                                                    <Button className=\"btn-sm w-100 mr-2\" variant='outline-danger' onClick={() => removeOrder(order._id)}>{t('cancel-order')}</Button>\r\n                                                </ListGroup.Item>\r\n                                            ) : ''\r\n                                        }\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row >\r\n            </Container>\r\n}\r\n\r\nexport default OrdersScreen\r\n","import axios from 'axios';\r\nimport { constants } from '../constants/constant.js';\r\n\r\nexport const getPayPalScript = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: constants.PAYPAL_CLIENT_ID_REQUEST,\r\n        })\r\n\r\n        // const {\r\n        //     userLogin: { userInfo },\r\n        // } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get('/api/config/paypal-client-id', config);\r\n\r\n        dispatch({\r\n            type: constants.PAYPAL_CLIENT_ID_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: constants.PAYPAL_CLIENT_ID_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// bootstrap\r\nimport { Table, Button } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\n// Actions\r\nimport { getMyOrders, cancelOrder } from '../actions/orderActions.js';\r\nimport { constants } from '../constants/constant';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst MyOrdersScreen = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useDispatch();\r\n    const { myOrders, loading, error } = useSelector(state => state.myOrders)\r\n    console.log('myOrders: ', myOrders);\r\n    const { loading: loadingCancel, success: successCancel, error: errorCancel } = useSelector(state => state.orderCancel)\r\n\r\n    useEffect(() => {\r\n        if (successCancel) {\r\n            dispatch(getMyOrders())\r\n            dispatch({ type: constants.ORDER_CREATE_RESET })\r\n        } else dispatch(getMyOrders())\r\n\r\n\r\n        return () => {\r\n            if (successCancel || errorCancel) {\r\n                dispatch({ type: constants.ORDER_CANCEL_RESET })\r\n            };\r\n        }\r\n    }, [dispatch, errorCancel, successCancel])\r\n\r\n    const removeOrder = (id) => dispatch(cancelOrder(id))\r\n\r\n    const showDate = (str) => new Date(str).toLocaleDateString('de-DE', { dateStyle: 'medium' })\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n\r\n    return loading || loadingCancel ?\r\n        <Loader /> :\r\n        error || errorCancel ?\r\n            <Message variant='danger'>{error || errorCancel}</Message> :\r\n            <>\r\n                <h3 className=\"mb-2\">{t('my-orders')}:</h3>\r\n                {\r\n                    !myOrders?.length ? (\r\n                        <Message variant=\"info\">\r\n                            {t('you-dont-have-any-orders-yet')}.\r\n                            <LinkContainer to='/'>\r\n                                <Button className=\"btn-sm ml-3\" variant='outline-info'>\r\n                                    <i className=\"fas fa-home pr-1\"></i> Home\r\n                                </Button>\r\n                            </LinkContainer>\r\n                        </Message>\r\n                    ) : (\r\n                        <Table striped bordered responsive hover className=\"table-sm fs-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>ID</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('date')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('total')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('paid')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('delivered')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('details')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('cancel')}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    myOrders.map((order) => (\r\n                                        <tr key={order._id}>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{order._id}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{showDate(order.createdAt)}</td>\r\n                                            <td className=\"text-right px-2\" style={{ verticalAlign: 'middle' }}>{currency(order.totalPrice)}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                {\r\n                                                    order?.isPaid ? (\r\n                                                        <>\r\n                                                            <span>{showDate(order?.paidAt)}</span>\r\n                                                            <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                        </>\r\n                                                    ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                {\r\n                                                    order?.isDelivered ? (\r\n                                                        <>\r\n                                                            <span>{showDate(order?.deliveredAt)}</span>\r\n                                                            <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                        </>\r\n                                                    ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                <LinkContainer to={`/orders/${order._id}`}>\r\n                                                    <Button className=\"btn-sm w-100 mr-2\" variant='outline-info'>\r\n                                                        {t('details')}\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                {\r\n                                                    !order?.isPaid ? (\r\n                                                        <Button className=\"btn-sm mr-2\" variant='outline-danger' onClick={() => removeOrder(order._id)}>\r\n                                                            {t('cancel')}\r\n                                                        </Button>\r\n                                                    ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </>\r\n}\r\n\r\nexport default MyOrdersScreen","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Form, Col, Card } from 'react-bootstrap';\r\n\r\n// Components\r\n// import Message from '../components/Message';\r\n// import Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\n// Actions\r\nimport { saveShippingAddress, savePaymentMethod } from '../actions/cartActions.js';\r\nimport { userAsGuest } from '../actions/userActions';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const { shippingAddress } = useSelector(state => state.cart);\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { guestInfo: guest } = useSelector(state => state.userAsGuest);\r\n\r\n    const [name, setName] = useState(guest?.name ? guest.name : '');\r\n    const [email, setEmail] = useState(guest?.email ? guest.email : '');\r\n    const [street, setStreet] = useState(shippingAddress?.street ? shippingAddress.street : '');\r\n    const [number, setNumber] = useState(shippingAddress?.number ? shippingAddress.number : '');\r\n    const [zipcode, setZipcode] = useState(shippingAddress?.zipcode ? shippingAddress.zipcode : '');\r\n    const [city, setCity] = useState(shippingAddress?.city ? shippingAddress.city : '');\r\n    const [country, setCountry] = useState(shippingAddress?.country ? shippingAddress.country : '');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        !userInfo && dispatch(userAsGuest({ name, email }));\r\n        dispatch(saveShippingAddress({ street, number, zipcode, city, country }));\r\n        dispatch(savePaymentMethod('PayPal'));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                {\r\n                    !userInfo && (\r\n                        <Card className=\"mb-3\">\r\n                            <Card.Header className=\"p-2\">\r\n                                <h5>{t('guest-info')}</h5>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"p-2\">\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} sm={6} lg={8} controlId='name'>\r\n                                        <Form.Label>{t('name-and-surname')}*</Form.Label>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            name='name'\r\n                                            placeholder={t('enter-your-name-and-surname')}\r\n                                            value={name}\r\n                                            required\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} sm={6} lg={4} controlId='email'>\r\n                                        <Form.Label>{t('email-address')}*</Form.Label>\r\n                                        <Form.Control\r\n                                            type='email'\r\n                                            name='email'\r\n                                            placeholder={t('enter-email')}\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                }\r\n\r\n                <Card className=\"mb-3\">\r\n                    <Card.Header className=\"p-2\">\r\n                        <h5>{t('shipping-address')}</h5>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} sm={6} lg={8} controlId='street'>\r\n                                <Form.Label>{t('street')}*</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='street'\r\n                                    placeholder={t('enter-street')}\r\n                                    value={street}\r\n                                    required\r\n                                    onChange={(e) => setStreet(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} sm={6} lg={4} controlId='number'>\r\n                                <Form.Label>{t('number')}*</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='number'\r\n                                    placeholder={t('enter-number')}\r\n                                    value={number}\r\n                                    required\r\n                                    onChange={(e) => setNumber(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} sm={4} lg={4} controlId=\"zipcode\">\r\n                                <Form.Label>{t('zip-code')}</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='zipcode'\r\n                                    placeholder={t('enter-zip-code')}\r\n                                    value={zipcode}\r\n                                    onChange={(e) => setZipcode(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} sm={4} lg={4} controlId=\"city\">\r\n                                <Form.Label>{t('city')}*</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='city'\r\n                                    placeholder={t('enter-city')}\r\n                                    value={city}\r\n                                    required\r\n                                    onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} sm={4} lg={4} controlId=\"country\">\r\n                                <Form.Label>{t('country')}*</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    name='country'\r\n                                    placeholder={t('enter-country')}\r\n                                    value={country}\r\n                                    required\r\n                                    onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Button type='submit' className=\"btn-block\" variant='primary'>{t('continue')}</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Form, Col, Card } from 'react-bootstrap';\r\n\r\n// Components\r\n// import Message from '../components/Message';\r\n// import Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\n// Actions\r\nimport { savePaymentMethod } from '../actions/cartActions.js';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst PaymentMethodScreen = ({ history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const { shippingAddress } = useSelector(state => state.cart);\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping');\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n            <h3>{t('payment-method')}</h3>\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group>\r\n                            <Form.Label as=\"legend\">{t('select-method')}:</Form.Label>\r\n                            <Col>\r\n                                <Form.Check type='radio' label='PayPal or Debit Card' id='PayPal' name='paymentMethod' value='PayPal' checked onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' value='Stripe' onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>{t('continue')}</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentMethodScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// bootstrap\r\nimport { Table, Button, Modal } from 'react-bootstrap'\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\n// Actions\r\nimport { getUserList, deleteUser } from '../actions/userActions.js';\r\n\r\n// Constants for action types\r\nimport { constants } from '../constants/constant.js';\r\n\r\n/** i18n */\r\nimport { useTranslation, Trans } from 'react-i18next'\r\n\r\nconst AdminUserListScreen = ({ history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const { users, loading, error } = useSelector(state => state.userList);\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { deletedUser, loading: loadingDeleted, error: errorDeleted } = useSelector(state => state.userDelete);\r\n    const { success, error: errorEdit } = useSelector(state => state.userEdit);\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } else if (userInfo?.isAdmin) {\r\n            dispatch(getUserList())\r\n        }\r\n\r\n        if (success) {\r\n            setShowSuccess(true)\r\n        } else if (errorEdit) {\r\n            setShowSuccess(false)\r\n        }\r\n\r\n        return () => {\r\n            (success || errorEdit) && dispatch({ type: constants.USER_EDIT_RESET });\r\n        }\r\n    }, [dispatch, userInfo, history, success, errorEdit])\r\n\r\n    useEffect(() => {\r\n        if (userInfo?.isAdmin && deletedUser) {\r\n            dispatch(getUserList())\r\n        }\r\n    }, [dispatch, userInfo, deletedUser])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [userForDelete, setUserForDelete] = useState(null);\r\n\r\n    const deleteHandlerShow = (user) => {\r\n        setUserForDelete(user);\r\n        setShow(true)\r\n    };\r\n\r\n    const handleConfirm = (confirm) => {\r\n        if (confirm) {\r\n            dispatch(deleteUser(userForDelete._id));\r\n        }\r\n        setShow(false)\r\n    };\r\n\r\n    return loading || loadingDeleted ?\r\n        <Loader /> :\r\n        error || errorDeleted ?\r\n            <Message variant='danger'>{error || errorDeleted}</Message> :\r\n            <>\r\n                <h3 className=\"mb-2\">{t('my-orders')}:</h3>\r\n                {showSuccess && <Message variant=\"success\">{t('user-edited-successfully')}.</Message>}\r\n                {\r\n                    deletedUser && (\r\n                        <Message variant=\"success\">\r\n                            <Trans i18nKey=\"success-deleted-user\">\r\n                                User {deletedUser?.name} with id: {deletedUser?._id} was successfully deleted.\r\n                            </Trans>\r\n                        </Message>\r\n                    )\r\n                }\r\n                {\r\n                    !users?.length ? (\r\n                        <Message variant=\"info\">\r\n                            {t('there-is-no-user-yet')}.\r\n                            <LinkContainer to='/'>\r\n                                <Button className=\"btn-sm ml-3\" variant='outline-info'>\r\n                                    <i className=\"fas fa-home pr-1\"></i> Home\r\n                                </Button>\r\n                            </LinkContainer>\r\n                        </Message>\r\n                    ) : (\r\n                        <Table striped bordered responsive hover className=\"table-sm fs-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Id</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Name</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Email</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Admin</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    users.map((user) => (\r\n                                        <tr key={user._id}>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{user._id}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{user.name}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                                            </td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                {user.isAdmin ? <i className=\"fas fa-check ml-2 text-success\"></i> : <i className=\"fas fa-times text-danger\"></i>}\r\n                                            </td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                <LinkContainer to={`/admin/useredit/${user._id}/edit`}>\r\n                                                    <Button className=\"btn-sm mr-2\" variant='outline-info'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button className=\"btn-sm mr-2\" variant='danger' onClick={() => deleteHandlerShow(user)} data-toggle=\"confirmation\">\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n\r\n                <Modal show={show} size={'lg'} onHide={() => handleConfirm(false)}>\r\n                    <Modal.Body>\r\n                        <h3> {t('would-you-really-want-to-remove-the-user')}? </h3>\r\n\r\n                        <Table striped bordered responsive hover className=\"table-sm mt-4 fs-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Id</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Name</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Email</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Admin</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{userForDelete?._id}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{userForDelete?.name}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                        <a href={`mailto:${userForDelete?.email}`}>{userForDelete?.email}</a>\r\n                                    </td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                        {userForDelete?.isAdmin ? <i className=\"fas fa-check ml-2 text-success\"></i> : <i className=\"fas fa-times text-danger\"></i>}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => handleConfirm(false)}>\r\n                            {t('no')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => handleConfirm(true)}>\r\n                            {t('yes')}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n}\r\n\r\nexport default AdminUserListScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Form, Card } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n// Constants for action types\r\nimport { constants } from '../constants/constant.js';\r\n\r\n// actions\r\nimport { getUserDetails, editUser } from '../actions/userActions';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst AdminUserEditScreen = ({ match, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, error, user } = useSelector(state => state.userDetails);\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { success, error: errorEdit } = useSelector(state => state.userEdit);\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: constants.USER_DETAILS_RESET })\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!user || !user.name) {\r\n            dispatch(getUserDetails(match?.params.id))\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        }\r\n    }, [dispatch, match?.params.id, user])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push('/admin/userlist')\r\n        }\r\n        return () => {\r\n            (success || errorEdit) && dispatch({ type: constants.USER_DETAILS_RESET });\r\n        }\r\n    }, [dispatch, errorEdit, history, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(editUser({ id: user._id, name, email, isAdmin }));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h3 className=\"mb-2\">{t('edit-user')}</h3>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error || errorEdit ? (\r\n                <Message variant='danger'>{error || errorEdit}</Message>\r\n            ) : (\r\n                <Card>\r\n                    <Card.Body className=\"p-2\">\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>{t('name-and-surname')}</Form.Label>\r\n                                <Form.Control type='text' placeholder={t('enter-your-name-and-surname')} value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>{t('email-address')}</Form.Label>\r\n                                <Form.Control type='email' placeholder={t('enter-email')} value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"isAdmin\">\r\n                                <Form.Label>{t('permission-level')}</Form.Label>\r\n                                <Form.Check type=\"checkbox\" label='Admin' checked={isAdmin} onChange={e => setIsAdmin(e.target.checked)} />\r\n                                <Form.Check type=\"checkbox\" label={t('user')} checked={!isAdmin} onChange={e => setIsAdmin(!e.target.checked)} />\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary' className=\"btn-block\">{t('update')}</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default AdminUserEditScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n// bootstrap\r\nimport { Row, Table, Button, Modal, Col } from 'react-bootstrap'\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\n// Actions\r\nimport { getProducts, deleteSingleProduct } from '../actions/productActions.js';\r\n\r\n// Custom Hooks\r\nimport useBreakpoint from '../customHooks/useBreakpoint';\r\n\r\n// Constants for action types\r\n// import { constants } from '../constants/constant.js';\r\n\r\n/** i18n */\r\nimport { useTranslation, Trans } from 'react-i18next'\r\n\r\nconst AdminProductListScreen = ({ history, match }) => {\r\n    const { t } = useTranslation();\r\n\r\n    // const [showSuccess, setShowSuccess] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { width } = useBreakpoint();\r\n\r\n    const { products, loading, error } = useSelector(state => state.products);\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { deletedProduct, loading: loadingDeleted, error: errorDeleted } = useSelector(state => state.productDelete);\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } else if (userInfo?.isAdmin) {\r\n            dispatch(getProducts())\r\n        }\r\n    }, [dispatch, userInfo, history])\r\n\r\n    useEffect(() => {\r\n        if (userInfo?.isAdmin && deletedProduct) {\r\n            dispatch(getProducts())\r\n        }\r\n    }, [dispatch, userInfo, deletedProduct])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [productForDelete, setProductForDelete] = useState(null);\r\n\r\n    const deleteHandlerShow = (user) => {\r\n        setProductForDelete(user);\r\n        setShow(true)\r\n    };\r\n\r\n    const handleConfirm = (confirm) => {\r\n        if (confirm) {\r\n            dispatch(deleteSingleProduct(productForDelete._id));\r\n        }\r\n        setShow(false)\r\n    };\r\n\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n\r\n    return loading || loadingDeleted ?\r\n        <Loader /> :\r\n        error || errorDeleted ?\r\n            <Message variant='danger'>{error || errorDeleted}</Message> :\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <h3 className=\"mb-2\">{t('products')}:</h3>\r\n                    </Col>\r\n\r\n                    <Col className=\"text-right\">\r\n                        <LinkContainer to='/admin/product/add'>\r\n                            <Button variant=\"warning\">\r\n                                <i className={`fas fa-plus ${width >= 576 && 'mr-2'}`}></i>\r\n                                {width < 576 ? null : t('add-product')}\r\n                            </Button>\r\n                        </LinkContainer>\r\n                    </Col>\r\n                </Row>\r\n                {/* {showSuccess && <Message variant=\"success\">Product edited successfully.</Message>} */}\r\n                {\r\n                    deletedProduct && (\r\n                        <Message variant=\"success\">\r\n                            <Trans i18nKey=\"success-deleted-product\">\r\n                                Product '{deletedProduct?.name}' with id: {deletedProduct?._id} was successfully deleted\r\n                            </Trans>\r\n                        </Message>\r\n                    )\r\n                }\r\n                {\r\n                    !products?.length ? (\r\n                        <Message variant=\"info\">\r\n                            {t('there-is-no-product-yet')}.\r\n                            <LinkContainer to='/'>\r\n                                <Button className=\"btn-sm ml-3\" variant='outline-info'>\r\n                                    <i className=\"fas fa-home pr-1\"></i> Home\r\n                                </Button>\r\n                            </LinkContainer>\r\n                        </Message>\r\n                    ) : (\r\n                        <Table striped bordered responsive hover className=\"table-sm fs-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Id</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Name</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('price')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('category')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('brand')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('actions')}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    products.map((product) => (\r\n                                        <tr key={product._id}>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{product._id}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{product.name}</td>\r\n                                            <td className=\"text-right\" style={{ verticalAlign: 'middle' }}>{currency(product.price)}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{product.category}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{product.brand}</td>\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                <LinkContainer to={`/admin/productedit/${product._id}/edit`}>\r\n                                                    <Button className=\"btn-sm mr-2\" variant='outline-info'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button className=\"btn-sm mr-2\" variant='danger' onClick={() => deleteHandlerShow(product)} data-toggle=\"confirmation\">\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n\r\n                <Modal show={show} size={'lg'} onHide={() => handleConfirm(false)}>\r\n                    <Modal.Body>\r\n                        <h3> {t('would-you-really-want-to-remove-the-product')}? </h3>\r\n\r\n                        <Table striped bordered responsive hover className=\"table-sm mt-4 fs-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Id</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Name</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('price')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('category')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('brand')}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{productForDelete?._id}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{productForDelete?.name}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{productForDelete?.price}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{productForDelete?.category}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{productForDelete?.brand}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => handleConfirm(false)}>\r\n                            {t('no')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => handleConfirm(true)}>\r\n                            {t('yes')}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n}\r\n\r\nexport default AdminProductListScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n// bootstrap\r\nimport { Table, Button, Modal, OverlayTrigger, Popover, Accordion, Card, Pagination, Dropdown, DropdownButton, Row, Col } from 'react-bootstrap'\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\n// Actions\r\nimport { getOrders, cancelOrder as deleteSingleOrder } from '../actions/orderActions.js';\r\n\r\n// Custom Hooks\r\n// import useBreakpoint from '../customHooks/useBreakpoint';\r\n\r\n// Constants for action types\r\n// import { constants } from '../constants/constant.js';\r\n\r\n/** i18n */\r\nimport { useTranslation, Trans } from 'react-i18next'\r\n\r\nconst AdminOrderListScreen = ({ history, match }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [step0, setStep0] = useState(15);\r\n    const [total0, setTotal0] = useState('');\r\n    const [numArr0, setNumArr0] = useState([]);\r\n    const [index0, setIndex0] = useState(0);\r\n    const [step1, setStep1] = useState(15);\r\n    const [total1, setTotal1] = useState('');\r\n    const [numArr1, setNumArr1] = useState([]);\r\n    const [index1, setIndex1] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [selected, setSelected] = useState([1, 0]);\r\n    const [orderForDelete, setOrderForDelete] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    // const { width } = useBreakpoint();\r\n\r\n    const { orders, loading, error } = useSelector(state => state.orders);\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { cancelledOrder: deletedOrder, loading: loadingDeleted, error: errorDeleted } = useSelector(state => state.orderCancel);\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } else if (userInfo?.isAdmin) {\r\n            dispatch(getOrders())\r\n        }\r\n    }, [dispatch, userInfo, history])\r\n\r\n    useEffect(() => {\r\n        if (userInfo?.isAdmin && deletedOrder) {\r\n            dispatch(getOrders())\r\n        }\r\n    }, [dispatch, userInfo, deletedOrder])\r\n\r\n    useEffect(() => {\r\n        if (orders) {\r\n            if (orders?.userOrders) {\r\n                setTotal0(orders?.userOrders?.length);\r\n                setNumArr0(builtPaginatorNumArr(orders?.userOrders?.length, step0))\r\n            }\r\n            if (orders?.visitorOrders) {\r\n                setTotal1(orders?.visitorOrders?.length);\r\n                setNumArr1(builtPaginatorNumArr(orders?.visitorOrders?.length, step1))\r\n            }\r\n        }\r\n    }, [orders, step0, step1])\r\n\r\n    const builtPaginatorNumArr = (num, step) => {\r\n        let arr = []\r\n        for (let i = 1; i <= num; i++) {\r\n            if (i >= step) {\r\n                if (!(i % step)) {\r\n                    arr.push(i)\r\n                    if (num - i < step) {\r\n                        if (num - i) {\r\n                            arr.push(i + step);\r\n                            return arr\r\n                        } else {\r\n                            return arr\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (num === i) {\r\n                    arr.push(step)\r\n                    return arr\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteHandlerShow = (user) => {\r\n        setOrderForDelete(user);\r\n        setShow(true)\r\n    };\r\n\r\n    const handleConfirm = (confirm) => {\r\n        if (confirm) {\r\n            dispatch(deleteSingleOrder(orderForDelete._id));\r\n        }\r\n        setShow(false)\r\n    };\r\n\r\n    const selectedTabHandler = (index) => {\r\n        setSelected(selected => selected.map((tab, i) => i === index ? 1 : 0))\r\n    }\r\n\r\n    const showDate = (str) => new Date(str).toLocaleDateString('de-DE', { dateStyle: 'medium' })\r\n    const currency = (amount) => new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount)\r\n\r\n    return loading || loadingDeleted ?\r\n        <Loader /> :\r\n        error || errorDeleted ?\r\n            <Message variant='danger'>{error || errorDeleted}</Message> :\r\n            <>\r\n                {/* {showSuccess && <Message variant=\"success\">Order edited successfully.</Message>} */}\r\n                {\r\n                    deletedOrder && (\r\n                        <Message variant=\"success\">\r\n                            <Trans i18nKey=\"success-deleted-order\">\r\n                                Order (id: {deletedOrder?._id}) was successfully deleted.\r\n                            </Trans>\r\n                        </Message>\r\n                    )\r\n                }\r\n\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                        <Card.Header className=\"border-0 d-flex p-0 m-0\">\r\n                            <Accordion.Toggle eventKey=\"0\" className=\"flex-grow-1 border-0 p-2 p-md-3 w-100\" onClick={() => selectedTabHandler(0)} style={{\r\n                                backgroundColor: selected[0] ? '#cccccc' : '#eeeeee'\r\n                            }}>\r\n                                <h4 className=\"mb-0 fs-16\">{t('orders-by-users')}:</h4>\r\n                            </Accordion.Toggle>\r\n\r\n                            <Accordion.Toggle eventKey=\"1\" className=\"flex-grow-1 border-0 p-2 p-md-3 w-100\" onClick={() => selectedTabHandler(1)} style={{\r\n                                backgroundColor: selected[1] ? '#cccccc' : '#eeeeee'\r\n                            }}>\r\n                                <h4 className=\"mb-0 fs-16\">{t('orders-by-guests')}:</h4>\r\n                            </Accordion.Toggle>\r\n                            {/* <h4 className=\"mb-0\">Orders By Users:</h4> */}\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body className=\"m-0 p-0 border-0\">\r\n\r\n                                {\r\n                                    !orders?.userOrders?.length ? (\r\n                                        <Message variant=\"info\">\r\n                                            <span className=\"fs-12\">{t('there-is-no-order-yet')}.</span>\r\n                                            <LinkContainer to='/'>\r\n                                                <Button className=\"btn-sm ml-3\" variant='outline-info'>\r\n                                                    <i className=\"fas fa-home pr-1\"></i> Home\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </Message>\r\n                                    ) : (\r\n                                        <>\r\n                                            {\r\n                                                step0 > 15 && (\r\n                                                    <Row>\r\n                                                        <Col className=\"col d-flex justify-content-center my-3 py-0\">\r\n\r\n                                                            <Pagination size=\"sm\" className=\"mb-0\">\r\n                                                                <Pagination.First onClick={() => setIndex0(0)} />\r\n                                                                <Pagination.Prev onClick={() => setIndex0(index0 > 0 ? index0 - 1 : index0)} />\r\n                                                                {\r\n                                                                    numArr0?.map((num, i) => <Pagination.Item key={i} active={i === index0 ? true : false} onClick={() => setIndex0(i)}>{i + 1}</Pagination.Item>)\r\n                                                                }\r\n                                                                <Pagination.Next onClick={() => setIndex0((index0 < Number.parseInt(total0 / step0) && (total0 % step0)) ? index0 + 1 : index0)} />\r\n                                                                <Pagination.Last onClick={() => setIndex0((total0 % step0) ? Number.parseInt(total0 / step0) : Number.parseInt(total0 / step0) - 1)} />\r\n                                                                {/* <Pagination.Ellipsis /> */}\r\n                                                            </Pagination>\r\n\r\n                                                            <DropdownButton size=\"sm\" id=\"dropdown-basic-button\" className=\"mx-1\" variant=\"info\" title={step0}>\r\n                                                                {\r\n                                                                    builtPaginatorNumArr(total0, 5) && builtPaginatorNumArr(total0, 5).map(step => (\r\n                                                                        <Dropdown.Item key={step} onClick={(e) => { setStep0(step); setIndex0(0) }}>\r\n                                                                            {step}\r\n                                                                        </Dropdown.Item>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </DropdownButton>\r\n\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n                                            <Table striped bordered responsive hover className=\"table-sm mb-0 fs-12\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>#</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Id</th>\r\n                                                        {/* <th className=\"text-center\" style={{ verticalAlign: 'middle' }}>USER ID</th> */}\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('user')}</th>\r\n                                                        {/* <th className=\"text-center\" style={{ verticalAlign: 'middle' }}>USER EMAIL</th> */}\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('date')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('total')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('paid')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('delivered')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('actions')}</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        orders?.userOrders?.map((order, index) => (\r\n\r\n                                                            (step0 * index0 <= index && index < step0 * (index0 + 1)) &&\r\n                                                            <tr key={order?._id}>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{index + 1}</td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{order?._id}</td>\r\n                                                                {/* <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{order?.user?._id}</td> */}\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                                    <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" overlay={\r\n                                                                        <Popover id=\"popover-basic\">\r\n                                                                            <Popover.Title as=\"h3\">Info</Popover.Title>\r\n                                                                            <Popover.Content>\r\n                                                                                <table>\r\n                                                                                    <tbody>\r\n                                                                                        <tr>\r\n                                                                                            {order?.user?._id && <th className=\"text-bold pr-2\">ID:</th>}\r\n                                                                                            {order?.user?._id && <td>{order.user._id}</td>}\r\n                                                                                        </tr>\r\n                                                                                        <tr>\r\n                                                                                            {order?.user?.name && <th className=\"text-bold pr-2\">Name:</th>}\r\n                                                                                            {order?.user?.name && <td>{order.user.name}</td>}\r\n                                                                                        </tr>\r\n                                                                                        <tr>\r\n                                                                                            {order?.user?.email && <th className=\"text-bold pr-2\">Email:</th>}\r\n                                                                                            {order?.user?.email && <td>{order.user.email}</td>}\r\n                                                                                        </tr>\r\n                                                                                    </tbody>\r\n                                                                                </table>\r\n                                                                            </Popover.Content>\r\n                                                                        </Popover>\r\n                                                                    }>\r\n                                                                        <LinkContainer to={`/admin/useredit/${order?.user?._id}/edit`}>\r\n                                                                            <Button className=\"btn-sm border-0 w-100 mr-2\" variant='outline-info'>\r\n                                                                                {order?.user?.name}\r\n                                                                            </Button>\r\n                                                                        </LinkContainer>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                {/* <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{order?.user?.email}</td> */}\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{showDate(order?.createdAt)}</td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{currency(order?.totalPrice)}</td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                                    {\r\n                                                                        order.isPaid ? (\r\n                                                                            <>\r\n                                                                                <span>{showDate(order.paidAt)}</span>\r\n                                                                                <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                                            </>\r\n                                                                        ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                                    {\r\n                                                                        order.isDelivered ? (\r\n                                                                            <>\r\n                                                                                <span>{showDate(order.deliveredAt)}</span>\r\n                                                                                <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                                            </>\r\n                                                                        ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                                    <LinkContainer to={`/orders/${order._id}`}>\r\n                                                                        <Button className=\"btn-sm mr-2\" variant='outline-info'>\r\n                                                                            <i className='fas fa-edit'></i>\r\n                                                                        </Button>\r\n                                                                    </LinkContainer>\r\n                                                                    <Button className=\"btn-sm\" variant='danger' onClick={() => deleteHandlerShow(order)} data-toggle=\"confirmation\">\r\n                                                                        <i className='fas fa-trash'></i>\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                            </tr>\r\n\r\n                                                        ))\r\n                                                    }\r\n                                                </tbody>\r\n                                            </Table >\r\n\r\n                                            <Row>\r\n                                                <Col className=\"col d-flex justify-content-center my-3 py-0\">\r\n\r\n                                                    <Pagination size=\"sm\" className=\"mb-0\">\r\n                                                        <Pagination.First onClick={() => setIndex0(0)} />\r\n                                                        <Pagination.Prev onClick={() => setIndex0(index0 > 0 ? index0 - 1 : index0)} />\r\n                                                        {\r\n                                                            numArr0?.map((num, i) => <Pagination.Item key={i} active={i === index0 ? true : false} onClick={() => setIndex0(i)}>{i + 1}</Pagination.Item>)\r\n                                                        }\r\n                                                        <Pagination.Next onClick={() => setIndex0((index0 < Number.parseInt(total0 / step0) && (total0 % step0)) ? index0 + 1 : index0)} />\r\n                                                        <Pagination.Last onClick={() => setIndex0((total0 % step0) ? Number.parseInt(total0 / step0) : Number.parseInt(total0 / step0) - 1)} />\r\n                                                        {/* <Pagination.Ellipsis /> */}\r\n                                                    </Pagination>\r\n\r\n                                                    <DropdownButton size=\"sm\" id=\"dropdown-basic-button\" className=\"mx-1\" variant=\"info\" title={step0}>\r\n                                                        {\r\n                                                            builtPaginatorNumArr(total0, 5) && builtPaginatorNumArr(total0, 5).map(step => (\r\n                                                                <Dropdown.Item key={step} onClick={(e) => setStep0(step)}>\r\n                                                                    {step}\r\n                                                                </Dropdown.Item>\r\n                                                            ))\r\n                                                        }\r\n                                                    </DropdownButton>\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n\r\n                    <Card>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                            <Card.Body className=\"m-0 p-0 border-0\">\r\n\r\n                                {\r\n                                    !orders?.visitorOrders?.length ? (\r\n                                        <Message variant=\"info\">\r\n                                            <span className=\"fs-12\">{t('there-is-no-order-yet')}.</span>\r\n                                            <LinkContainer to='/'>\r\n                                                <Button className=\"btn-sm ml-3\" variant='outline-info'>\r\n                                                    <i className=\"fas fa-home pr-1\"></i> Home\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </Message>\r\n                                    ) : (\r\n                                        <>\r\n                                            {\r\n                                                step1 > 15 && (\r\n                                                    <Row>\r\n                                                        <Col className=\"col d-flex justify-content-center my-3 py-0\">\r\n                                                            <Pagination size=\"sm\" className=\"mb-0\">\r\n                                                                <Pagination.First onClick={() => setIndex1(0)} />\r\n                                                                <Pagination.Prev onClick={() => setIndex1(index1 > 0 ? index1 - 1 : index1)} />\r\n                                                                {\r\n                                                                    numArr1?.map((num, i) => <Pagination.Item key={i} active={i === index1 ? true : false} onClick={() => setIndex1(i)}>{i + 1}</Pagination.Item>)\r\n                                                                }\r\n                                                                <Pagination.Next onClick={() => setIndex0((index1 < Number.parseInt(total1 / step1) && (total1 % step1)) ? index1 + 1 : index1)} />\r\n                                                                <Pagination.Last onClick={() => setIndex0((total1 % step1) ? Number.parseInt(total1 / step1) : Number.parseInt(total1 / step1) - 1)} />\r\n                                                                {/* <Pagination.Ellipsis /> */}\r\n                                                            </Pagination>\r\n\r\n                                                            <DropdownButton size=\"sm\" id=\"dropdown-basic-button\" className=\"px-1\" variant=\"info\" title={step1}>\r\n                                                                {\r\n                                                                    builtPaginatorNumArr(total1, 5) && builtPaginatorNumArr(total1, 5).map(step => (\r\n                                                                        <Dropdown.Item key={step} onClick={(e) => { setStep1(step); setIndex1(0) }}>\r\n                                                                            {step}\r\n                                                                        </Dropdown.Item>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </DropdownButton>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n\r\n                                            <Table striped bordered responsive hover className=\"table-sm mb-0 fs-12\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>#</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Id</th>\r\n                                                        {/* <th className=\"text-center\" style={{ verticalAlign: 'middle' }}>USER ID</th> */}\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('guest')}</th>\r\n                                                        {/* <th className=\"text-center\" style={{ verticalAlign: 'middle' }}>USER EMAIL</th> */}\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('date')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('total')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('paid')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('delivered')}</th>\r\n                                                        <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('actions')}</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        orders?.visitorOrders?.map((order, index) => (\r\n                                                            (step1 * index1 <= index && index < step1 * (index1 + 1)) &&\r\n                                                            <tr key={order?._id}>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{index + 1}</td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{order?._id}</td>\r\n                                                                {/* <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{order?.user?._id}</td> */}\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                                    <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" overlay={\r\n                                                                        <Popover id=\"popover-basic\">\r\n                                                                            <Popover.Title as=\"h3\">Info</Popover.Title>\r\n                                                                            <Popover.Content>\r\n                                                                                <table>\r\n                                                                                    <tbody>\r\n                                                                                        <tr>\r\n                                                                                            {order?.visitor?._id && <th className=\"text-bold pr-2\">ID:</th>}\r\n                                                                                            {order?.visitor?._id && <td>{order.visitor._id}</td>}\r\n                                                                                        </tr>\r\n                                                                                        <tr>\r\n                                                                                            {order?.visitor?.name && <th className=\"text-bold pr-2\">Name:</th>}\r\n                                                                                            {order?.visitor?.name && <td>{order.visitor.name}</td>}\r\n                                                                                        </tr>\r\n                                                                                        <tr>\r\n                                                                                            {order?.visitor?.email && <th className=\"text-bold pr-2\">Email:</th>}\r\n                                                                                            {order?.visitor?.email && <td>{order.visitor.email}</td>}\r\n                                                                                        </tr>\r\n                                                                                    </tbody>\r\n                                                                                </table>\r\n                                                                            </Popover.Content>\r\n                                                                        </Popover>\r\n                                                                    }>\r\n                                                                        <LinkContainer to={`/admin/useredit/${order?.visitor?._id}/edit`}>\r\n                                                                            <Button className=\"btn-sm w-100 mr-2\" variant='outline-info'>{order?.visitor?.name}</Button>\r\n                                                                        </LinkContainer>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                {/* <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{order?.user?.email}</td> */}\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{showDate(order?.createdAt)}</td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{currency(order?.totalPrice)}</td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                                    {\r\n                                                                        order.isPaid ? (\r\n                                                                            <>\r\n                                                                                <span>{showDate(order.paidAt)}</span>\r\n                                                                                <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                                            </>\r\n                                                                        ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                                    {\r\n                                                                        order.isDelivered ? (\r\n                                                                            <>\r\n                                                                                <span>{showDate(order.deliveredAt)}</span>\r\n                                                                                <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                                            </>\r\n                                                                        ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                                                    <LinkContainer to={`/orders/${order._id}`}>\r\n                                                                        <Button className=\"btn-sm mr-2\" variant='outline-info'>\r\n                                                                            <i className='fas fa-edit'></i>\r\n                                                                        </Button>\r\n                                                                    </LinkContainer>\r\n                                                                    <Button className=\"btn-sm mr-2\" variant='danger' onClick={() => deleteHandlerShow(order)} data-toggle=\"confirmation\">\r\n                                                                        <i className='fas fa-trash'></i>\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))\r\n                                                    }\r\n                                                </tbody>\r\n                                            </Table >\r\n\r\n                                            <Row>\r\n                                                <Col className=\"col d-flex justify-content-center my-3 py-0\">\r\n                                                    <Pagination size=\"sm\" className=\"mb-0\">\r\n                                                        <Pagination.First onClick={() => setIndex1(0)} />\r\n                                                        <Pagination.Prev onClick={() => setIndex1(index1 > 0 ? index1 - 1 : index1)} />\r\n                                                        {\r\n                                                            numArr1?.map((num, i) => <Pagination.Item key={i} active={i === index1 ? true : false} onClick={() => setIndex1(i)}>{i + 1}</Pagination.Item>)\r\n                                                        }\r\n                                                        <Pagination.Next onClick={() => setIndex0((index1 < Number.parseInt(total1 / step1) && (total1 % step1)) ? index1 + 1 : index1)} />\r\n                                                        <Pagination.Last onClick={() => setIndex0((total1 % step1) ? Number.parseInt(total1 / step1) : Number.parseInt(total1 / step1) - 1)} />\r\n                                                        {/* <Pagination.Ellipsis /> */}\r\n                                                    </Pagination>\r\n\r\n                                                    <DropdownButton size=\"sm\" id=\"dropdown-basic-button\" className=\"px-1\" variant=\"info\" title={step1}>\r\n                                                        {\r\n                                                            builtPaginatorNumArr(total1, 5) && builtPaginatorNumArr(total1, 5).map(step => (\r\n                                                                <Dropdown.Item key={step} onClick={(e) => setStep1(step)}>\r\n                                                                    {step}\r\n                                                                </Dropdown.Item>\r\n                                                            ))\r\n                                                        }\r\n                                                    </DropdownButton>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n\r\n                <Modal show={show} size={'lg'} onHide={() => handleConfirm(false)}>\r\n                    <Modal.Body>\r\n                        <h3> {t('would-you-really-want-to-cancel-the-order')}? </h3>\r\n\r\n                        <Table striped bordered responsive hover className=\"table-sm mt-4 fs-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>Id</th>\r\n                                    {/* <th className=\"text-center\" style={{ verticalAlign: 'middle' }}>USER ID</th> */}\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('name')}</th>\r\n                                    {/* <th className=\"text-center\" style={{ verticalAlign: 'middle' }}>USER EMAIL</th> */}\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('date')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('total')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('paid')}</th>\r\n                                    <th className=\"text-center\" style={{ verticalAlign: 'middle', textTransform: 'uppercase' }}>{t('delivered')}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{orderForDelete?._id}</td>\r\n                                    {/* <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{orderForDelete?.user?._id}</td> */}\r\n                                    {\r\n                                        orderForDelete?.user && (\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                {orderForDelete?.user?.name}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        orderForDelete?.visitor && (\r\n                                            <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                {orderForDelete?.visitor?.name}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    {/* <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{orderForDelete?.user?.email}</td> */}\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{showDate(orderForDelete?.createdAt)}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle' }}>{currency(orderForDelete?.totalPrice)}</td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                        {\r\n                                            orderForDelete?.isPaid ? (\r\n                                                <>\r\n                                                    <span>{showDate(orderForDelete?.paidAt)}</span>\r\n                                                    <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                </>\r\n                                            ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                        }\r\n                                    </td>\r\n                                    <td className=\"text-center\" style={{ verticalAlign: 'middle', whiteSpace: 'nowrap' }}>\r\n                                        {\r\n                                            orderForDelete?.isDelivered ? (\r\n                                                <>\r\n                                                    <span>{showDate(orderForDelete?.deliveredAt)}</span>\r\n                                                    <i className=\"fas fa-check ml-2 text-success\"></i>\r\n                                                </>\r\n                                            ) : <i className=\"fas fa-times text-danger\"></i>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => handleConfirm(false)}>\r\n                            {t('no')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => handleConfirm(true)}>\r\n                            {t('yes')}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n}\r\n\r\nexport default AdminOrderListScreen","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Form, Card, InputGroup, ListGroup, Row, Col, Image } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n// Constants for action types\r\nimport { constants } from '../constants/constant.js';\r\n\r\n// actions\r\nimport { getSingleProduct, editSingleProduct } from '../actions/productActions';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst AdminProductEditScreen = ({ match, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [image, setImage] = useState([]);\r\n    const [imgError, setImgError] = useState([]);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const fileRef = useRef();\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { loading, error, product } = useSelector(state => state.product);\r\n    const { success: successEdit, error: errorEdit, loading: loadingEdit } = useSelector(state => state.productEdit);\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    useEffect(() => {\r\n        if (!(product?._id || successEdit)) {\r\n            dispatch(getSingleProduct(match?.params.id))\r\n        } else {\r\n            if (product) {\r\n                console.log('product: ', product);\r\n                setName(product.name)\r\n                setDescription(product.description)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setPrice(product.price)\r\n                setCountInStock(product.countInStock)\r\n                setImage([...product.image])\r\n            }\r\n        }\r\n        return () => {\r\n            if (product && product._id) {\r\n                dispatch({ type: constants.SINGLE_PRODUCT_RESET })\r\n            };\r\n        }\r\n    }, [dispatch, match?.params.id, product, successEdit])\r\n\r\n    useEffect(() => {\r\n        if (successEdit) {\r\n            dispatch(getSingleProduct(match?.params.id))\r\n            // history.push('/admin/productlist')\r\n        }\r\n        return () => {\r\n            if (successEdit || errorEdit) {\r\n                dispatch({ type: constants.PRODUCT_EDIT_RESET })\r\n            };\r\n        }\r\n    }, [dispatch, errorEdit, match?.params.id, successEdit])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(editSingleProduct({ id: product._id, name, description, brand, category, price, countInStock, image }));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        let files = [];\r\n        setImgError([]);\r\n        for (let key in e.target.files) {\r\n            if (key !== 'item' && key !== 'length') {\r\n                let file = e.target.files[key];\r\n                let isImage = (/image\\/.*/gm).test(file.type)\r\n                isImage ? files.push(file) : setImgError(imgError => [...imgError, `${file.name} is not an image file. Accepted types:  \".jpg\", \".jpeg\", \".png\"`])\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            setIsUploading(true);\r\n            files.forEach(file => formData.append('image', file));\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/uploads', formData, config)\r\n            setImage(image => [...image, ...data.filter(item => !image.filter(img => item.originalname === img.originalname).length)]);\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            setIsUploading(false)\r\n        }\r\n    }\r\n\r\n    const removeImgHandler = async (id, name, index) => {\r\n        try {\r\n            setIsUploading(true);\r\n            const { data } = await axios.delete(`/api/uploads/delete/${id}/${name}`)\r\n            if (data?.status === 'deleted') {\r\n                let arr = [...image]\r\n                let deleted = arr.splice(index, 1);\r\n                if (deleted) setImage(arr);\r\n            } else {\r\n                setImgError(['Some Images were not deleted successfully!'])\r\n            }\r\n        } catch (error) {\r\n            const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n            setImgError([message])\r\n        } finally {\r\n            setIsUploading(false)\r\n        }\r\n    }\r\n\r\n    const currency = (amount) => {\r\n        return amount ? new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount) : ''\r\n    }\r\n\r\n    console.log('error, errorEdit, imgError: ', error, errorEdit, imgError);\r\n    console.log('successEdit: ', successEdit);\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h3 className=\"mb-2\">{t('edit-product')}</h3>\r\n            {\r\n                loading || loadingEdit || isUploading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <>\r\n                        {(error || errorEdit) && <Message variant='danger'>{error || errorEdit}</Message>}\r\n                        {successEdit && <Message variant='success'>{t('success-product-was-updated')}!</Message>}\r\n                        {imgError?.length !== 0 && imgError.map((error, index) => <Message key={index} variant='danger'>{error}</Message>)}\r\n                        <Card>\r\n                            <Card.Body className=\"p-2\">\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type='text' placeholder={t('enter-product-name')} value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='description'>\r\n                                        <Form.Label>{t('description')}</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} placeholder={t('enter-description')} value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='brand'>\r\n                                        <Form.Label>{t('brand')}</Form.Label>\r\n                                        <Form.Control type='text' placeholder={t('enter-brand')} value={brand} onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='category'>\r\n                                        <Form.Label>{t('category')}</Form.Label>\r\n                                        <Form.Control type='text' placeholder={t('enter-category')} value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='price'>\r\n                                        <Form.Label>{t('price')} (€)</Form.Label>\r\n                                        <InputGroup>\r\n                                            <Form.Control type='text' placeholder={t('enter-price')} value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                                            <InputGroup.Text id=\"btnGroupAddon\">{currency(price)}</InputGroup.Text>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='countInStock'>\r\n                                        <Form.Label>Count In Stock</Form.Label>\r\n                                        <Form.Control type='number' min='0' placeholder={t('enter-count-in-stock')} value={countInStock} onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='image'>\r\n                                        <Form.Label>{t('image')}</Form.Label>\r\n                                        <ListGroup>\r\n                                            {\r\n                                                image?.length !== 0 && image.map((img, index) => (\r\n                                                    <ListGroup.Item key={index} className=\"mb-1 p-1\" style={{ backgroundColor: 'ghostwhite', borderTopWidth: '1px' }}>\r\n                                                        <Row className=\"align-items-center m-0\">\r\n                                                            <Col xs={2} className='px-0'>\r\n                                                                <Image src={img.path} alt={img.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col xs={8} className=\"px-0 pl-2 text-sm-left fs-10\">\r\n                                                                {img?.name}\r\n                                                            </Col>\r\n\r\n                                                            <Col xs={2} className=\"px-0 text-right\">\r\n                                                                <Button type='button' variant=\"light\" onClick={() => removeImgHandler(product._id, img.name, index)}>\r\n                                                                    <i className='fas fa-trash'></i>\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                        </ListGroup>\r\n\r\n                                        <Form.File ref={fileRef} id=\"image-file\" label={t('choose-file')} custom onChange={uploadFileHandler} multiple></Form.File>\r\n                                    </Form.Group>\r\n\r\n                                    {/* <Form.Group className=\"mb-3\" controlId=\"isAdmin\">\r\n                                <Form.Label>Permission Level</Form.Label>\r\n                                <Form.Check type=\"checkbox\" label='Admin' checked={isAdmin} onChange={e => setIsAdmin(e.target.checked)} />\r\n                                <Form.Check type=\"checkbox\" label='User' checked={!isAdmin} onChange={e => setIsAdmin(!e.target.checked)} />\r\n                            </Form.Group> */}\r\n\r\n                                    <Button type='submit' variant='primary' className=\"btn-block mb-1\">{t('update')}</Button>\r\n\r\n                                    <LinkContainer to={`/admin/productlist`}>\r\n                                        <Button variant='info' className=\"btn-block mb-1\">\r\n                                            <i className=\"fas fa-chevron-circle-left mr-1\"></i>\r\n                                            {t('back-to-product-list')}\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    {\r\n                                        match?.params?.id && (\r\n                                            <LinkContainer to={`/products/${match.params.id}`}>\r\n                                                <Button variant='warning' className=\"btn-block mb-1\">\r\n                                                    <i className=\"fas fa-chevron-circle-up mr-1\"></i>\r\n                                                    {t('show-product')}\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        )\r\n                                    }\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </>\r\n                )\r\n            }\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default AdminProductEditScreen\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// bootstrap\r\nimport { Button, Form, Card, InputGroup, ListGroup, Row, Col, Image } from 'react-bootstrap';\r\n\r\n// Components\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n// Constants for action types\r\n// import { constants } from '../constants/constant.js';\r\n\r\n// actions\r\nimport { addNewProduct, getSingleProduct } from '../actions/productActions';\r\n\r\n/** i18n */\r\nimport { useTranslation } from 'react-i18next'\r\nimport { constants } from '../constants/constant';\r\n\r\nconst AdminAddNewProductScreen = ({ match, history }) => {\r\n    const { t } = useTranslation();\r\n    const { i18n } = useTranslation();\r\n    const [language, setLanguage] = useState('de')\r\n\r\n    const dispatch = useDispatch();\r\n    const fileRef = useRef();\r\n\r\n    i18n.on('languageChanged', (e) => {\r\n        setLanguage(e);\r\n        if (fileRef?.current?.files) {\r\n            for (let key in fileRef.current.files) {\r\n                if (key !== 'item' && key !== 'length') {\r\n                    let file = fileRef.current.files[key];\r\n                    let isImage = (/image\\/.*/gm).test(file.type)\r\n                    !isImage && setImgError(imgError => [language === 'en' ? `${file.name} ist keine Bilddatei. Akzeptierte Typen:  \".jpg\", \".jpeg\", \".png\"` : `${file.name} is not an image file. Accepted types:  \".jpg\", \".jpeg\", \".png\"`])\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [productAddedSuccess, setProductAddedSuccess] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [image, setImage] = useState([]);\r\n    const [imgError, setImgError] = useState([]);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n    const { loading: loadingProduct, error: errorProduct, product } = useSelector(state => state.product);\r\n    const { loading, productAdded, error: errorAdded } = useSelector(state => state.productNewAdd);\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: constants.SINGLE_PRODUCT_RESET })\r\n        dispatch({ type: constants.PRODUCT_NEW_ADD_RESET })\r\n    }, [dispatch])\r\n\r\n    // useEffect(() => {\r\n    //     if (!(product?._id || successEdit)) {\r\n    //         dispatch(getSingleProduct(match?.params.id))\r\n    //     } else {\r\n    //         if (product) {\r\n    //             setName(product.name)\r\n    //             setDescription(product.description)\r\n    //             setBrand(product.brand)\r\n    //             setCategory(product.category)\r\n    //             setPrice(product.price)\r\n    //             setCountInStock(product.countInStock)\r\n    //             setImage(product.image)\r\n    //         }\r\n    //     }\r\n    //     return () => {\r\n    //         if (product && product._id) {\r\n    //             dispatch({ type: constants.SINGLE_PRODUCT_RESET })\r\n    //         };\r\n    //     }\r\n    // }, [dispatch, match?.params.id, product, successEdit])\r\n\r\n    useEffect(() => {\r\n        if (productAdded?._id) {\r\n            dispatch(getSingleProduct(productAdded._id))\r\n            setProductAddedSuccess(true)\r\n            // history.push('/admin/productlist')\r\n        }\r\n        return () => {\r\n            dispatch({ type: constants.PRODUCT_NEW_ADD_RESET })\r\n        }\r\n    }, [dispatch, errorAdded, productAdded])\r\n\r\n    useEffect(() => {\r\n        if (product) {\r\n            setName(product.name)\r\n            setDescription(product.description)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setPrice(product.price)\r\n            setCountInStock(product.countInStock)\r\n            setImage([...product.image])\r\n        }\r\n        return () => {\r\n            dispatch({ type: constants.SINGLE_PRODUCT_RESET })\r\n        }\r\n    }, [dispatch, errorAdded, product, productAdded])\r\n\r\n    const submitHandler = (e) => {\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n        if (!form?.checkValidity()) {\r\n            e.stopPropagation();\r\n            setValidated(true);\r\n        } else {\r\n            dispatch(addNewProduct({ name, description, brand, category, price, countInStock, image }))\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        let files = [];\r\n        setImgError([]);\r\n        for (let key in e.target.files) {\r\n            if (key !== 'item' && key !== 'length') {\r\n                let file = e.target.files[key];\r\n                let isImage = (/image\\/.*/gm).test(file.type)\r\n                isImage ? files.push(file) : setImgError(imgError => [...imgError, language === 'de' ? `${file.name} ist keine Bilddatei. Akzeptierte Typen:  \".jpg\", \".jpeg\", \".png\"` : `${file.name} is not an image file. Accepted types:  \".jpg\", \".jpeg\", \".png\"`])\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            setIsUploading(true);\r\n            files.forEach(file => formData.append('image', file));\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/uploads', formData, config)\r\n            setImage(image => [...image, ...data.filter(item => !image.filter(img => item.originalname === img.originalname).length)]);\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            setIsUploading(false)\r\n        }\r\n    }\r\n\r\n    const removeImgHandler = async (name, index) => {\r\n        try {\r\n            setIsUploading(true);\r\n            const { data } = await axios.delete(`/api/uploads/delete/${name}`)\r\n            if (data?.status === 'deleted') {\r\n                let arr = [...image]\r\n                let deleted = arr.splice(index, 1);\r\n                if (deleted) setImage(arr);\r\n            } else {\r\n                setImgError(['Some Images were not deleted successfully!'])\r\n            }\r\n        } catch (error) {\r\n            const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n            setImgError([message])\r\n        } finally {\r\n            setIsUploading(false)\r\n        }\r\n    }\r\n\r\n    const currency = (amount) => {\r\n        return amount ? new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(amount) : ''\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h4 className=\"mb-2 fs-22\">{t('add-a-new-product')}</h4>\r\n            {\r\n                (loading || loadingProduct || isUploading) && <Loader />\r\n            }\r\n            {\r\n                (errorAdded || errorProduct) && <Message variant='danger'>{errorAdded || errorProduct}</Message>\r\n            }\r\n            {\r\n                imgError?.length !== 0 && imgError.map((error, index) => <Message key={index} variant='danger'>{error}</Message>)\r\n            }\r\n            {\r\n                productAddedSuccess && <Message variant='success'>{t('success-product-was-generated')}!</Message>\r\n            }\r\n            <>\r\n                <Card>\r\n                    <Card.Body className=\"p-2\">\r\n                        <Form noValidate validated={validated} onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name*</Form.Label>\r\n                                <Form.Control required type='text' placeholder={t('enter-product-name')} value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {t('this-field-cannot-be-emty')}.\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback>{t('looks-good')}!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>{t('description')}*</Form.Label>\r\n                                <Form.Control required as=\"textarea\" rows={3} placeholder={t('enter-description')} value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {t('this-field-cannot-be-emty')}.\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback>{t('looks-good')}!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>{t('brand')}*</Form.Label>\r\n                                <Form.Control required type='text' placeholder={t('enter-brand')} value={brand} onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {t('this-field-cannot-be-emty')}.\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback>{t('looks-good')}!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>{t('category')}*</Form.Label>\r\n                                <Form.Control required type='text' placeholder={t('enter-category')} value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {t('this-field-cannot-be-emty')}.\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback>{t('looks-good')}!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>{t('price')} (€)</Form.Label>\r\n                                <InputGroup>\r\n                                    <Form.Control required type='text' placeholder={t('enter-price')} value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                                    <InputGroup.Text id=\"btnGroupAddon\">{t('value')}: {currency(price ? price : '0')}</InputGroup.Text>\r\n                                </InputGroup>\r\n                                {price >= 0 && <Form.Control.Feedback>{t('looks-good')}!</Form.Control.Feedback>}\r\n                                {price < 0 && <Form.Control.Feedback type=\"invalid\">{t('please-enter-a-positive-number')}!</Form.Control.Feedback>}\r\n                                {\r\n                                    // eslint-disable-next-line eqeqeq\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {t('this-field-cannot-be-emty')}.\r\n                                    </Form.Control.Feedback>\r\n\r\n                                }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>{t('count-in-stock')}</Form.Label>\r\n                                <Form.Control required type='number' placeholder={t('enter-count-in-stock')} value={countInStock} onChange={(e) => e.target.value >= 0 && setCountInStock(e.target.value)}></Form.Control>\r\n                                {countInStock >= 0 && <Form.Control.Feedback>{t('looks-good')}!</Form.Control.Feedback>}\r\n                                {countInStock < 0 && <Form.Control.Feedback type=\"invalid\">{t('please-enter-a-positive-number')}!</Form.Control.Feedback>}\r\n                                {\r\n                                    // eslint-disable-next-line eqeqeq\r\n                                    countInStock == undefined &&\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {t('this-field-cannot-be-emty')}.\r\n                                    </Form.Control.Feedback>\r\n                                }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>{t('image')}</Form.Label>\r\n                                {/* {\r\n                                    image?.length && image.map((img, index) => (\r\n                                        <Form.Control key={index} required type='text' placeholder='Enter image' value={img} onChange={(e) => { arr = [...image]; arr[index] = e.target.value; setImage(arr) }}></Form.Control>\r\n                                    ))\r\n                                } */}\r\n\r\n                                <ListGroup>\r\n                                    {\r\n                                        image?.length !== 0 && image.map((img, index) => (\r\n                                            <ListGroup.Item key={index} className=\"mb-1 p-1\" style={{ backgroundColor: 'ghostwhite', borderTopWidth: '1px' }}>\r\n                                                <Row className=\"align-items-center m-0\">\r\n                                                    <Col xs={1} className='px-0'>\r\n                                                        <Image src={img?.path} alt={img?.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col xs={9} className=\"px-0 pl-3 text-sm-left\">\r\n                                                        {img?.name}\r\n                                                    </Col>\r\n\r\n                                                    <Col xs={2} className=\"px-2 text-right\">\r\n                                                        <Button type='button' variant=\"light\" onClick={() => removeImgHandler(img.name, index)}>\r\n                                                            <i className='fas fa-trash'></i>\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                </ListGroup>\r\n\r\n                                <Form.File ref={fileRef} id=\"image-file\" label={t('choose-file')} custom onChange={uploadFileHandler} multiple></Form.File>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {t('this-field-cannot-be-emty')}.\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback>{t('looks-good')}!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group className=\"mb-3\" controlId=\"isAdmin\">\r\n                                <Form.Label>Permission Level</Form.Label>\r\n                                <Form.Check type=\"checkbox\" label='Admin' checked={isAdmin} onChange={e => setIsAdmin(e.target.checked)} />\r\n                                <Form.Check type=\"checkbox\" label='User' checked={!isAdmin} onChange={e => setIsAdmin(!e.target.checked)} />\r\n                            </Form.Group> */}\r\n\r\n                            <Button type='submit' variant='primary' className=\"btn-block mb-1\">{t('generate')}</Button>\r\n\r\n                            <LinkContainer to={`/admin/productlist`}>\r\n                                <Button variant='info' className=\"btn-block mb-1\">\r\n                                    <i className=\"fas fa-chevron-circle-left mr-1\"></i>\r\n                                    {t('back-to-product-list')}\r\n                                </Button>\r\n                            </LinkContainer>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default AdminAddNewProductScreen\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n/** Styles */\r\nimport { Container } from 'react-bootstrap';\r\n\r\n/** Components */\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport HomeScreen from './screens/HomeScreens';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport PlaceOrdersScreen from './screens/PlaceOrdersScreen';\r\nimport OrdersScreen from './screens/OrdersScreen';\r\nimport MyOrdersScreen from './screens/MyOrdersScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\r\nimport AdminUserListScreen from './screens/AdminUserListScreen';\r\nimport AdminUserEditScreen from './screens/AdminUserEditScreen';\r\nimport AdminProductListScreen from './screens/AdminProductListScreen';\r\nimport AdminOrderListScreen from './screens/AdminOrderListScreen';\r\nimport AdminProductEditScreen from './screens/AdminProductEditScreen';\r\nimport AdminAddNewProductScreen from './screens/AdminAddNewProductScreen';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n\r\n            <main id='main' style={{ paddingTop: '56px' }}>\r\n                <Container fluid className='py-3'>\r\n                    <Route path='/' component={HomeScreen} exact />\r\n                    <Route path='/login' component={LoginScreen} />\r\n                    <Route path='/register' component={RegisterScreen} />\r\n                    <Route path='/profile' component={ProfileScreen} />\r\n                    <Route path='/placeorder' component={PlaceOrdersScreen} />\r\n                    <Route path='/my-orders' component={MyOrdersScreen} />\r\n                    <Route path='/orders/:id' component={OrdersScreen} />\r\n                    <Route path='/shipping' component={ShippingScreen} />\r\n                    <Route path='/payment-method' component={PaymentMethodScreen} />\r\n                    <Route path='/products/:id' component={ProductScreen} />\r\n                    <Route path='/cart/:id?' component={CartScreen} />\r\n                    <Route path='/admin/userlist' component={AdminUserListScreen} />\r\n                    <Route path='/admin/useredit/:id/edit' component={AdminUserEditScreen} />\r\n                    <Route path='/admin/productlist' component={AdminProductListScreen} />\r\n                    <Route path='/admin/orderlist' component={AdminOrderListScreen} />\r\n                    <Route path='/admin/productedit/:id/edit' component={AdminProductEditScreen} />\r\n                    <Route path='/admin/product/add' component={AdminAddNewProductScreen} />\r\n                </Container>\r\n            </main>\r\n\r\n            <Footer />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n.use(initReactI18next).init({\r\n    fallbackLng: 'en',\r\n    lng: 'de',\r\n    resources: {\r\n        de: {\r\n            translations: require('./locales/de/translations.json')\r\n        },\r\n        en: {\r\n            translations: require('./locales/en/translations.json')\r\n        }\r\n    },\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    interpolation: {\r\n        escapeValue: false // react already safes from xss\r\n    }\r\n});\r\n\r\ni18n.languages = ['de', 'en'];\r\n\r\nexport default i18n;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store.js'\r\nimport './bootstrap.min.css';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './i18n/config.js';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}